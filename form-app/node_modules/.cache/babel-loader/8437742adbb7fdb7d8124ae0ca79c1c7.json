{"ast":null,"code":"var _jsxFileName = \"/home/rafaelle.xavier/Documentos/visitenos-form-insa/form-app/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker'; // Helper styles for demo\n\nimport \"./helper.css\";\nimport { MoreResources, DisplayFormikState } from \"./helper\";\n\nconst form = () => React.createElement(\"div\", {\n  className: \"app\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18\n  },\n  __self: this\n}, \"Basic\", \" \", React.createElement(\"a\", {\n  href: \"https://github.com/jaredpalmer/formik\",\n  target: \"_blank\",\n  rel: \"noopener noreferrer\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}, \"Formik\"), \" \", \"Demo\"), React.createElement(Formik, {\n  initialValues: {\n    email: \"\"\n  },\n  onSubmit: async values => {\n    await new Promise(resolve => setTimeout(resolve, 500));\n    alert(JSON.stringify(values, null, 2));\n  },\n  validationSchema: Yup.object().shape({\n    email: Yup.string().email().required(\"Required\")\n  }),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30\n  },\n  __self: this\n}, props => {\n  const {\n    values,\n    touched,\n    errors,\n    dirty,\n    isSubmitting,\n    handleChange,\n    handleBlur,\n    handleSubmit,\n    handleReset\n  } = props;\n  return React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    style: {\n      display: \"block\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"Email\"), React.createElement(\"input\", {\n    id: \"email\",\n    placeholder: \"Enter your email\",\n    type: \"text\",\n    value: values.email,\n    onChange: handleChange,\n    onBlur: handleBlur,\n    className: errors.email && touched.email ? \"text-input error\" : \"text-input\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), errors.email && touched.email && React.createElement(\"div\", {\n    className: \"input-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, errors.email), React.createElement(\"button\", {\n    type: \"button\",\n    className: \"outline\",\n    onClick: handleReset,\n    disabled: !dirty || isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Reset\"), React.createElement(\"button\", {\n    type: \"submit\",\n    disabled: isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(DisplayFormikState, Object.assign({}, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })));\n}), React.createElement(MoreResources, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94\n  },\n  __self: this\n}));\n\nReactDOM.render(React.createElement(\"form\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["/home/rafaelle.xavier/Documentos/visitenos-form-insa/form-app/src/index.js"],"names":["React","ReactDOM","Formik","Yup","App","serviceWorker","MoreResources","DisplayFormikState","form","email","values","Promise","resolve","setTimeout","alert","JSON","stringify","object","shape","string","required","props","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset","display","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Formik} from \"formik\";\nimport * as Yup from \"yup\";\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n// Helper styles for demo\nimport \"./helper.css\";\nimport { MoreResources, DisplayFormikState } from \"./helper\";\n\n\nconst form = () => (\n  <div className=\"app\">\n    <h1>\n      Basic{\" \"}\n      <a\n        href=\"https://github.com/jaredpalmer/formik\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        Formik\n      </a>{\" \"}\n      Demo\n    </h1>\n\n    <Formik\n      initialValues={{ email: \"\" }}\n      onSubmit={async values => {\n        await new Promise(resolve => setTimeout(resolve, 500));\n        alert(JSON.stringify(values, null, 2));\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email()\n          .required(\"Required\")\n      })}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset\n        } = props;\n        return (\n          <form onSubmit={handleSubmit}>\n            <label htmlFor=\"email\" style={{ display: \"block\" }}>\n              Email\n            </label>\n            <input\n              id=\"email\"\n              placeholder=\"Enter your email\"\n              type=\"text\"\n              value={values.email}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              className={\n                errors.email && touched.email\n                  ? \"text-input error\"\n                  : \"text-input\"\n              }\n            />\n            {errors.email && touched.email && (\n              <div className=\"input-feedback\">{errors.email}</div>\n            )}\n\n            <button\n              type=\"button\"\n              className=\"outline\"\n              onClick={handleReset}\n              disabled={!dirty || isSubmitting}\n            >\n              Reset\n            </button>\n            <button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </button>\n\n            <DisplayFormikState {...props} />\n          </form>\n        );\n      }}\n    </Formik>\n\n    <MoreResources />\n  </div>\n);\n\nReactDOM.render(<form />, document.getElementById('root'));\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/rafaelle.xavier/Documentos/visitenos-form-insa/form-app/src/FormVisitenos.js\";\nimport React from \"react\";\nimport { withFormik, Form, Field, ErrorMessage } from \"formik\";\nimport { render } from \"react-dom\";\nconst initialValues = {\n  nomeInstituicao: \"\",\n  telefoneInstituicao: \"\",\n  emailInstituicao: \"\",\n  nomeResponsavel: \"\",\n  telefoneResponsavel: \"\",\n  emailResponsavel: \"\",\n  nVisitantes: \"\",\n  dataVisita: \"\",\n  objetivoCaract: \"\",\n  horario: \"\",\n  opcoes: \"\"\n};\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.nomeInstituicao) {\n    errors.nomeInstituicao = 'Instituição Visitante não pode ser vazio';\n  }\n\n  return errors;\n};\n\nconst enhanceWithFormik = withFormik({\n  mapPropsToValues: () => ({\n    name: '',\n    surname: '',\n    email: '',\n    password: ''\n  }),\n  handleSubmit: (values, formikBag) => {\n    console.log(values);\n  },\n  isInitialValid: false,\n  validateOnChange: true,\n  validateOnBlur: true,\n  displayName: 'MyForm',\n  validate: values => {\n    const {\n      name,\n      surname,\n      email\n    } = values;\n    const errors = {};\n\n    if (!name) {\n      errors.name = 'Informe o nome!';\n    } else if (name.length < 5) {\n      errors.name = 'O nome deve conter mais de 5 letras!';\n    } else if (name.length > 100) {\n      errors.name = 'O nome deve conter menos de 100 letras!';\n    } else if (name === 'admin' || name === 'administrador') {\n      errors.name = 'Esse nome não pode camarada!';\n    }\n\n    if (!surname) {\n      errors.surname = 'Informe o sobrenome!';\n    }\n\n    if (!email) {\n      errors.email = 'Informe o email!';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n      errors.email = 'Informe um email válido!';\n    }\n\n    return errors;\n  }\n});\n\nconst INSAForm = () => {\n  const onSubmit = values => {};\n\n  const enhanceWithFormik = withFormik({\n    initialValues,\n    validate,\n    onSubmit\n  }, isInitialValid = false, validateOnChange = true, validateOnBlur = true);\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"Institui\\xE7\\xE3o visitante\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }), React.createElement(ErrorMessage, {\n    name: \"nomeInstituicao\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    placeholder: \"Telefone da Isntitui\\xE7\\xE3o\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    placeholder: \"E-mail da intitui\\xE7\\xE3o\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"Nome do Respons\\xE1vel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    placeholder: \"Telefone do respons\\xE1vel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    placeholder: \"E-mail do respons\\xE1vel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  })));\n};\n\nexport default INSAForm;","map":{"version":3,"sources":["/home/rafaelle.xavier/Documentos/visitenos-form-insa/form-app/src/FormVisitenos.js"],"names":["React","withFormik","Form","Field","ErrorMessage","render","initialValues","nomeInstituicao","telefoneInstituicao","emailInstituicao","nomeResponsavel","telefoneResponsavel","emailResponsavel","nVisitantes","dataVisita","objetivoCaract","horario","opcoes","validate","values","errors","enhanceWithFormik","mapPropsToValues","name","surname","email","password","handleSubmit","formikBag","console","log","isInitialValid","validateOnChange","validateOnBlur","displayName","length","test","INSAForm","onSubmit"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { withFormik, Form, Field,ErrorMessage } from \"formik\";\nimport { render } from \"react-dom\";\n\n\nconst initialValues = {\n  nomeInstituicao: \"\",\n  telefoneInstituicao: \"\",\n  emailInstituicao: \"\",\n  nomeResponsavel: \"\",\n  telefoneResponsavel: \"\",\n  emailResponsavel: \"\",\n  nVisitantes: \"\",\n  dataVisita: \"\",\n  objetivoCaract: \"\",\n  horario: \"\",\n  opcoes: \"\"\n\n};\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.nomeInstituicao){\n    errors.nomeInstituicao = 'Instituição Visitante não pode ser vazio';\n  }\n\n  return errors;\n};\n\nconst enhanceWithFormik = withFormik({\n  mapPropsToValues: () => ({ name: '', surname: '', email: '', password: '' }),\n  handleSubmit: (values, formikBag) => {\n    console.log(values)\n  },\n  isInitialValid: false,\n  validateOnChange: true,\n  validateOnBlur: true,\n  displayName: 'MyForm',\n  validate: values => {\n    const { name, surname, email } = values\n    const errors = {}\n    if (!name) {\n      errors.name = 'Informe o nome!'\n    } else if (name.length < 5) {\n      errors.name = 'O nome deve conter mais de 5 letras!'\n    } else if (name.length > 100) {\n      errors.name = 'O nome deve conter menos de 100 letras!'\n    } else if (name === 'admin' || name === 'administrador') {\n      errors.name = 'Esse nome não pode camarada!'\n    }\n\n    if (!surname) {\n      errors.surname = 'Informe o sobrenome!'\n    }\n\n    if (!email) {\n      errors.email = 'Informe o email!'\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n      errors.email = 'Informe um email válido!'\n    }\n\n    return errors\n  }\n})\n\n\n\n\nconst INSAForm = () => {\n  const onSubmit = values => { };\n\n  const enhanceWithFormik = withFormik({\n    initialValues,\n    validate,\n    onSubmit\n  },\n  isInitialValid= false,\n  validateOnChange= true,\n  validateOnBlur= true,\n  \n  );\n\n  return (\n    <form>\n      <div>\n        <input placeholder=\"Instituição visitante\" />\n        <ErrorMessage name=\"nomeInstituicao\" />\n        <input placeholder=\"Telefone da Isntituição\" />\n        <input placeholder=\"E-mail da intituição\" />\n      </div>\n\n      <div>\n        <input placeholder=\"Nome do Responsável\" />\n        <input placeholder=\"Telefone do responsável\" />\n        <input placeholder=\"E-mail do responsável\" />\n      </div>\n\n    </form>\n  );\n};\n\nexport default INSAForm\n"]},"metadata":{},"sourceType":"module"}
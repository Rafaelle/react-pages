{"ast":null,"code":"var _jsxFileName = \"/home/rafaelle.xavier/Documentos/visitenos-form-insa/form-app/src/FormVisitenosBootstrap.js\";\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport TelephoneInput from './components/TelephoneInput';\nimport RadioButton from './components/RadioButton';\nimport RadioButtonGroup from './components/RadioButtonGroup';\nimport TextInput from './components/TextInput';\nimport { withGetScreen } from 'react-getscreen';\nconst initialValues = {\n  nomeInstituicao: \"\",\n  telefoneInstituicao: \"\",\n  emailInstituicao: \"\",\n  nomeResponsavel: \"\",\n  telefoneResponsavel: \"\",\n  emailresponsavel: \"\",\n  nVisitantes: \"\",\n  dataVisita: \"\",\n  objetivoCaracteristicas: \"\",\n  horario: \"\"\n};\nconst validationSchema = Yup.object().shape({\n  nomeInstituicao: Yup.string().label('Nome instituição visitante').required('Valor não pode ser vazio'),\n  telefoneInstituicao: Yup.string().label('Telefone da instituição visitante').required('Valor não pode ser vazio'),\n  emailInstituicao: Yup.string().label('Nome instituição visitante').email(\"Adicione um e-amil válido\").required('Valor não pode ser vazio'),\n  nomeResponsavel: Yup.string().label('Nome instituição visitante').min(4, 'Mínimo 4 caracteres').required('Valor não pode ser vazio'),\n  telefoneResponsavel: Yup.string().label('Telefone da instituição visitante').required('Valor não pode ser vazio'),\n  emailresponsavel: Yup.string().label('Nome instituição visitante').email(\"Adicione um e-amil válido\").required('Valor não pode ser vazio'),\n  nVisitantes: Yup.number().label('Número de visitantes').required('Valor não pode ser vazio'),\n  dataVisita: Yup.date().label('Data da visita').required('Valor não pode ser vazio'),\n  objetivoCaracteristicas: Yup.string().label('Objetivo e características da turma visitante').required('Valor não pode ser vazio'),\n  horario: Yup.string().label('Horário da visita').required('Escolha um horário para visita')\n});\n\nconst onSubmit = values => {\n  alert(JSON.stringify(values, null, 2));\n};\n\nconst INSAForm = () => {\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit\n  });\n  return React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    id: \"instituicao\",\n    className: \"elements-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    className: \"title-box-element\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"INSTITUI\\xC7\\xC3O VISITANTE\"), React.createElement(TextInput, {\n    id: \"nomeInstituicao\",\n    type: \"text\",\n    label: \"Nome da Institui\\xE7\\xE3o Visitante:\",\n    placeholder: \"Nome da institui\\xE7\\xE3o visitante\",\n    error: formik.touched.nomeInstituicao && formik.errors.nomeInstituicao,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(TelephoneInput, {\n    id: \"telefoneInstituicao\",\n    type: \"text\",\n    label: \"Telefone da Institui\\xE7\\xE3o visitante:\",\n    placeholder: \"Telefone da Institui\\xE7\\xE3o visitante\",\n    error: formik.touched.telefoneInstituicao && formik.errors.telefoneInstituicao,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    mask: (['(', /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/], ['(', /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }), React.createElement(TextInput, {\n    id: \"emailInstituicao\",\n    type: \"email\",\n    placeholder: \"E-mail da Institui\\xE7\\xE3o visitante\",\n    error: formik.touched.emailInstituicao && formik.errors.emailInstituicao,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }))), React.createElement(\"fieldset\", {\n    id: \"responsavel\",\n    className: \"elements-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    className: \"title-box-element\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }, \"RESPONS\\xC1VEL PELA VISITA\"), React.createElement(TextInput, {\n    id: \"nomeResponsavel\",\n    type: \"text\",\n    placeholder: \"Nome do respons\\xE1vel pela visita\",\n    error: formik.touched.nomeResponsavel && formik.errors.nomeResponsavel,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    id: \"telefoneResponsavel\",\n    type: \"text\",\n    placeholder: \"Telefone do Respons\\xE1vel pela visita\",\n    error: formik.touched.telefoneResponsavel && formik.errors.telefoneResponsavel,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }), React.createElement(TextInput, {\n    id: \"emailresponsavel\",\n    type: \"email\",\n    placeholder: \"E-mail do respons\\xE1vel\",\n    error: formik.touched.emailresponsavel && formik.errors.emailresponsavel,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"elements-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    id: \"nVisitantes\",\n    type: \"number\",\n    label: \"N\\xFAmero de visitantes:\",\n    placeholder: \"N\\xFAmero de visitantes\",\n    error: formik.touched.nVisitantes && formik.errors.nVisitantes,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), React.createElement(TextInput, {\n    id: \"dataVisita\",\n    type: \"text\",\n    label: \"Data da visita:\",\n    error: formik.touched.dataVisita && formik.errors.dataVisita,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  })), React.createElement(TextInput, {\n    id: \"objetivoCaracteristicas\",\n    type: \"text\",\n    label: \"Objetivo e caracter\\xEDsticas da turma:\",\n    placeholder: \"Objetivo e caracter\\xEDsticas da turma\",\n    error: formik.touched.objetivoCaracteristicas && formik.errors.objetivoCaracteristicas,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172\n    },\n    __self: this\n  })), React.createElement(RadioButtonGroup, {\n    id: \"horarios\",\n    label: \"HOR\\xC1RIO DA VISITA\",\n    value: formik.values.horario,\n    error: formik.touched.horario && formik.errors.horario,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184\n    },\n    __self: this\n  }, React.createElement(RadioButton, {\n    component: RadioButton,\n    name: \"horario\",\n    id: \"horarioManha\",\n    label: \"Manh\\xE3:\",\n    hour: \"8:30h \\xE0s 11:30h\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    className: \"horario\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }), React.createElement(RadioButton, {\n    component: RadioButton,\n    name: \"horario\",\n    id: \"horarioTarde\",\n    label: \"Tarde:\",\n    hour: \"das 13:30h \\xE0s 16:30h\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    className: \"horario\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200\n    },\n    __self: this\n  }), React.createElement(RadioButton, {\n    component: RadioButton,\n    name: \"horario\",\n    id: \"horarioManhaTarde\",\n    label: \"Manh\\xE3 e Tarde:\",\n    hour: \"das 8:30h \\xE0s 16:30h\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    className: \"horario\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"reset\",\n    className: \"outline\",\n    onClick: formik.resetForm && formik.handleChange,\n    disabled: !formik.dirty || formik.isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225\n    },\n    __self: this\n  }, \"Limpar\"), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, \"Enviar\"));\n};\n\nexport default INSAForm;","map":{"version":3,"sources":["/home/rafaelle.xavier/Documentos/visitenos-form-insa/form-app/src/FormVisitenosBootstrap.js"],"names":["React","useFormik","Yup","TelephoneInput","RadioButton","RadioButtonGroup","TextInput","withGetScreen","initialValues","nomeInstituicao","telefoneInstituicao","emailInstituicao","nomeResponsavel","telefoneResponsavel","emailresponsavel","nVisitantes","dataVisita","objetivoCaracteristicas","horario","validationSchema","object","shape","string","label","required","email","min","number","date","onSubmit","values","alert","JSON","stringify","INSAForm","formik","handleSubmit","touched","errors","handleChange","handleBlur","resetForm","dirty","isSubmitting"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\n\nimport * as Yup from 'yup';\nimport TelephoneInput from './components/TelephoneInput';\nimport RadioButton from './components/RadioButton';\nimport RadioButtonGroup from './components/RadioButtonGroup';\nimport TextInput from './components/TextInput';\nimport {withGetScreen} from 'react-getscreen'\n\n\n\nconst initialValues = {\n  nomeInstituicao: \"\",\n  telefoneInstituicao: \"\",\n  emailInstituicao: \"\",\n  nomeResponsavel: \"\",\n  telefoneResponsavel: \"\",\n  emailresponsavel: \"\",\n  nVisitantes: \"\",\n  dataVisita: \"\",\n  objetivoCaracteristicas: \"\",\n  horario: \"\"\n};\n\nconst validationSchema = Yup.object().shape({\n  nomeInstituicao: Yup.string()\n    .label('Nome instituição visitante')\n    .required('Valor não pode ser vazio'),\n  telefoneInstituicao: Yup.string()\n    .label('Telefone da instituição visitante')\n    .required('Valor não pode ser vazio'),\n  emailInstituicao: Yup.string()\n    .label('Nome instituição visitante')\n    .email(\"Adicione um e-amil válido\")\n    .required('Valor não pode ser vazio'),\n  nomeResponsavel: Yup.string()\n    .label('Nome instituição visitante')\n    .min(4, 'Mínimo 4 caracteres')\n    .required('Valor não pode ser vazio'),\n  telefoneResponsavel: Yup.string()\n    .label('Telefone da instituição visitante')\n    .required('Valor não pode ser vazio'),\n  emailresponsavel: Yup.string()\n    .label('Nome instituição visitante')\n    .email(\"Adicione um e-amil válido\")\n    .required('Valor não pode ser vazio'),\n  nVisitantes: Yup.number()\n    .label('Número de visitantes')\n    .required('Valor não pode ser vazio'),\n  dataVisita: Yup.date()\n    .label('Data da visita')\n    .required('Valor não pode ser vazio'),\n  objetivoCaracteristicas: Yup.string()\n    .label('Objetivo e características da turma visitante')\n    .required('Valor não pode ser vazio'),\n  horario: Yup.string()\n    .label('Horário da visita')\n    .required('Escolha um horário para visita')\n})\n\nconst onSubmit = values => {\n  alert(JSON.stringify(values, null, 2));\n};\n\nconst INSAForm = () => {\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit\n  });\n\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      {/*Dados instituição*/}\n      <fieldset id=\"instituicao\" className=\"elements-group\">\n        <legend className=\"title-box-element\">INSTITUIÇÃO VISITANTE</legend>\n\n        <TextInput\n          id=\"nomeInstituicao\"\n          type=\"text\"\n          label=\"Nome da Instituição Visitante:\"\n          placeholder=\"Nome da instituição visitante\"\n          error={formik.touched.nomeInstituicao && formik.errors.nomeInstituicao}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n        />\n\n        <div className=\"input-group\">\n\n          <TelephoneInput\n            id=\"telefoneInstituicao\"\n            type=\"text\"\n            label=\"Telefone da Instituição visitante:\"\n            placeholder=\"Telefone da Instituição visitante\"\n            error={formik.touched.telefoneInstituicao && formik.errors.telefoneInstituicao}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n            mask={['(', /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/], ['(', /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n          />\n\n          <TextInput\n            id=\"emailInstituicao\"\n            type=\"email\"\n            placeholder=\"E-mail da Instituição visitante\"\n            error={formik.touched.emailInstituicao && formik.errors.emailInstituicao}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n          />\n        </div>\n      </fieldset>\n\n      {/*Dados responsável pela visita*/}\n      <fieldset id=\"responsavel\" className=\"elements-group\">\n        <legend className=\"title-box-element\">RESPONSÁVEL PELA VISITA</legend>\n\n        <TextInput\n          id=\"nomeResponsavel\"\n          type=\"text\"\n          placeholder=\"Nome do responsável pela visita\"\n          error={formik.touched.nomeResponsavel && formik.errors.nomeResponsavel}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n        />\n        <div className=\"input-group\">\n          <TextInput\n            id=\"telefoneResponsavel\"\n            type=\"text\"\n            placeholder=\"Telefone do Responsável pela visita\"\n            error={formik.touched.telefoneResponsavel && formik.errors.telefoneResponsavel}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n          />\n\n          <TextInput\n            id=\"emailresponsavel\"\n            type=\"email\"\n            placeholder=\"E-mail do responsável\"\n            error={formik.touched.emailresponsavel && formik.errors.emailresponsavel}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n          />\n        </div>\n      </fieldset>\n\n\n      {/* Dados gerais sobre a visita*/}\n      <div className=\"elements-group\">\n        <div className=\"input-group\">\n          { /* Ajustar para receber apenas números positivos */}\n          <TextInput\n            id=\"nVisitantes\"\n            type=\"number\"\n            label=\"Número de visitantes:\"\n            placeholder=\"Número de visitantes\"\n            error={formik.touched.nVisitantes && formik.errors.nVisitantes}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n          />\n          <TextInput\n            id=\"dataVisita\"\n            type=\"text\"\n            label=\"Data da visita:\"\n            error={formik.touched.dataVisita && formik.errors.dataVisita}\n            onChange={formik.handleChange}\n            onBlur={formik.handleBlur}\n          />\n        </div>\n\n        { /* aumentar input */}\n        <TextInput\n          id=\"objetivoCaracteristicas\"\n          type=\"text\"\n          label=\"Objetivo e características da turma:\"\n          placeholder=\"Objetivo e características da turma\"\n          error={formik.touched.objetivoCaracteristicas && formik.errors.objetivoCaracteristicas}\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n        />\n      </div>\n\n      {/* horário e locais pretendidos para a visita */}\n      <RadioButtonGroup\n        id=\"horarios\"\n        label=\"HORÁRIO DA VISITA\"\n        value={formik.values.horario}\n        error={formik.touched.horario && formik.errors.horario}\n      >\n        <RadioButton\n          component={RadioButton}\n          name=\"horario\"\n          id=\"horarioManha\"\n          label=\"Manhã:\"\n          hour=\"8:30h às 11:30h\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          className=\"horario\"\n        />\n        <RadioButton\n          component={RadioButton}\n          name=\"horario\"\n          id=\"horarioTarde\"\n          label=\"Tarde:\"\n          hour=\"das 13:30h às 16:30h\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          className=\"horario\"\n\n        />\n        <RadioButton\n          component={RadioButton}\n          name=\"horario\"\n          id=\"horarioManhaTarde\"\n          label=\"Manhã e Tarde:\"\n          hour=\"das 8:30h às 16:30h\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          className=\"horario\"\n\n        />\n\n      </RadioButtonGroup>\n\n      <button type=\"reset\" className=\"outline\" onClick={formik.resetForm && formik.handleChange} disabled={!formik.dirty || formik.isSubmitting}>\n        Limpar\n      </button>\n      <button type=\"submit\" >Enviar</button>\n\n    </form>\n\n  );\n};\n\nexport default INSAForm\n"]},"metadata":{},"sourceType":"module"}
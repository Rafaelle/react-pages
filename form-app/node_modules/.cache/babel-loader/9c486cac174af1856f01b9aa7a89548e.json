{"ast":null,"code":"var _jsxFileName = \"/home/rafaelle.xavier/Documentos/visitenos-form-insa/form-app/src/FormVisitenos.js\";\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport { render } from \"react-dom\";\nconst initialValues = {\n  nomeInstituicao: \"\",\n  telefoneInstituicao: \"\",\n  emailInstituicao: \"\",\n  nomeResponsavel: \"\",\n  telefoneResponsavel: \"\",\n  emailResponsavel: \"\",\n  nVisitantes: \"\",\n  dataVisita: \"\",\n  objetivoCaract: \"\",\n  horario: \"\",\n  opcoes: \"\"\n};\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.intituicaoVisitante) {\n    errors.intituicaoVisitante = 'Instituição Visitante não pode ser vazio';\n  }\n\n  if (!values.lastName) {\n    errors.lastName = 'Required';\n  } else if (values.lastName.length > 20) {\n    errors.lastName = 'Must be 20 characters or less';\n  }\n\n  if (!values.emailInstituicao) {\n    errors.emailInstituicao = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.emailInstituicao)) {\n    errors.emailInstituicao = 'Invalid email address';\n  }\n\n  return errors;\n};\n\nconst INSAForm = () => {\n  const onSubmit = values => {};\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit\n  });\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"Institui\\xE7\\xE3o visitante\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    placeholder: \"Telefone da Isntitui\\xE7\\xE3o\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    placeholder: \"E-mail da intitui\\xE7\\xE3o\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"Nome do Respons\\xE1vel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    placeholder: \"Telefone do respons\\xE1vel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }), React.createElement(\"input\", {\n    placeholder: \"E-mail do respons\\xE1vel\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })));\n};\n\nexport default INSAForm;","map":{"version":3,"sources":["/home/rafaelle.xavier/Documentos/visitenos-form-insa/form-app/src/FormVisitenos.js"],"names":["React","useFormik","render","initialValues","nomeInstituicao","telefoneInstituicao","emailInstituicao","nomeResponsavel","telefoneResponsavel","emailResponsavel","nVisitantes","dataVisita","objetivoCaract","horario","opcoes","validate","values","errors","intituicaoVisitante","lastName","length","test","INSAForm","onSubmit","formik"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,QAA1B;AACA,SAASC,MAAT,QAAuB,WAAvB;AAGA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,eAAe,EAAE,EADG;AAEpBC,EAAAA,mBAAmB,EAAE,EAFD;AAGpBC,EAAAA,gBAAgB,EAAE,EAHE;AAIpBC,EAAAA,eAAe,EAAE,EAJG;AAKpBC,EAAAA,mBAAmB,EAAE,EALD;AAMpBC,EAAAA,gBAAgB,EAAE,EANE;AAOpBC,EAAAA,WAAW,EAAE,EAPO;AAQpBC,EAAAA,UAAU,EAAE,EARQ;AASpBC,EAAAA,cAAc,EAAE,EATI;AAUpBC,EAAAA,OAAO,EAAE,EAVW;AAWpBC,EAAAA,MAAM,EAAE;AAXY,CAAtB;;AAeA,MAAMC,QAAQ,GAAGC,MAAM,IAAI;AACzB,QAAMC,MAAM,GAAG,EAAf;;AACA,MAAI,CAACD,MAAM,CAACE,mBAAZ,EAAiC;AAC/BD,IAAAA,MAAM,CAACC,mBAAP,GAA6B,0CAA7B;AACD;;AAED,MAAI,CAACF,MAAM,CAACG,QAAZ,EAAsB;AACpBF,IAAAA,MAAM,CAACE,QAAP,GAAkB,UAAlB;AACD,GAFD,MAEO,IAAIH,MAAM,CAACG,QAAP,CAAgBC,MAAhB,GAAyB,EAA7B,EAAiC;AACtCH,IAAAA,MAAM,CAACE,QAAP,GAAkB,+BAAlB;AACD;;AAED,MAAI,CAACH,MAAM,CAACV,gBAAZ,EAA8B;AAC5BW,IAAAA,MAAM,CAACX,gBAAP,GAA0B,UAA1B;AACD,GAFD,MAEO,IAAI,CAAC,4CAA4Ce,IAA5C,CAAiDL,MAAM,CAACV,gBAAxD,CAAL,EAAgF;AACrFW,IAAAA,MAAM,CAACX,gBAAP,GAA0B,uBAA1B;AACD;;AAED,SAAOW,MAAP;AACD,CAnBD;;AAqBA,MAAMK,QAAQ,GAAG,MAAM;AACrB,QAAMC,QAAQ,GAAGP,MAAM,IAAI,CAAG,CAA9B;;AAEA,QAAMQ,MAAM,GAAGvB,SAAS,CAAC;AACvBE,IAAAA,aADuB;AAEvBoB,IAAAA;AAFuB,GAAD,CAAxB;AAKA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,WAAW,EAAC,6BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAO,IAAA,WAAW,EAAC,+BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAO,IAAA,WAAW,EAAC,4BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,WAAW,EAAC,wBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAO,IAAA,WAAW,EAAC,4BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAO,IAAA,WAAW,EAAC,0BAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CAPF,CADF;AAgBD,CAxBD;;AA0BA,eAAeD,QAAf","sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\nimport { render } from \"react-dom\";\n\n\nconst initialValues = {\n  nomeInstituicao: \"\",\n  telefoneInstituicao: \"\",\n  emailInstituicao: \"\",\n  nomeResponsavel: \"\",\n  telefoneResponsavel: \"\",\n  emailResponsavel: \"\",\n  nVisitantes: \"\",\n  dataVisita: \"\",\n  objetivoCaract: \"\",\n  horario: \"\",\n  opcoes: \"\"\n\n};\n\nconst validate = values => {\n  const errors = {};\n  if (!values.intituicaoVisitante) {\n    errors.intituicaoVisitante = 'Instituição Visitante não pode ser vazio';\n  }\n\n  if (!values.lastName) {\n    errors.lastName = 'Required';\n  } else if (values.lastName.length > 20) {\n    errors.lastName = 'Must be 20 characters or less';\n  }\n\n  if (!values.emailInstituicao) {\n    errors.emailInstituicao = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.emailInstituicao)) {\n    errors.emailInstituicao = 'Invalid email address';\n  }\n\n  return errors;\n};\n\nconst INSAForm = () => {\n  const onSubmit = values => { };\n\n  const formik = useFormik({\n    initialValues,\n    onSubmit\n  });\n\n  return (\n    <form>\n      <div>\n        <input placeholder=\"Instituição visitante\" />\n        <input placeholder=\"Telefone da Isntituição\" />\n        <input placeholder=\"E-mail da intituição\" />\n      </div>\n\n      <div>\n        <input placeholder=\"Nome do Responsável\" />\n        <input placeholder=\"Telefone do responsável\" />\n        <input placeholder=\"E-mail do responsável\" />\n      </div>\n\n    </form>\n  );\n};\n\nexport default INSAForm\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/rafaelle.xavier/Documentos/visitenos-form-insa/form-app/src/FormVisitenosBootstrap.js\";\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from 'yup';\nimport TelephoneInput from './components/TelephoneInput';\nimport RadioButton from './components/RadioButton';\nimport RadioButtonGroup from './components/RadioButtonGroup';\nimport TextInput from './components/TextInput';\nconst initialValues = {\n  nomeInstituicao: \"\",\n  telefoneInstituicao: \"\",\n  emailInstituicao: \"\",\n  nomeResponsavel: \"\",\n  telefoneResponsavel: \"\",\n  emailresponsavel: \"\",\n  nVisitantes: \"\",\n  dataVisita: \"\",\n  objetivoCaracteristicas: \"\",\n  horario: \"\"\n};\nconst validationSchema = Yup.object().shape({\n  nomeInstituicao: Yup.string().label('Nome instituição visitante').required('Por favor, digite o nome da Instituição'),\n  telefoneInstituicao: Yup.string().label('Telefone da instituição visitante').required('Por favor, digite o número do telefone com DDD'),\n  emailInstituicao: Yup.string().label('Nome instituição visitante').email(\"Por favor, adicione um e-mail válido\"),\n  nomeResponsavel: Yup.string().label('Nome instituição visitante').min(4, 'Mínimo 4 caracteres').required('Por favor, digite o nome do Responsável'),\n  telefoneResponsavel: Yup.string().label('Telefone da instituição visitante').required('Por favor, digite o número do telefone com DDD'),\n  emailresponsavel: Yup.string().label('Nome instituição visitante').email(\"Por favor, adicione um e-mail válido\").required('Valor não pode ser vazio'),\n  nVisitantes: Yup.number().label('Número de visitantes').required('Valor não pode ser vazio'),\n  dataVisita: Yup.date().label('Data da visita').required('Valor não pode ser vazio'),\n  objetivoCaracteristicas: Yup.string().label('Objetivo e características da turma visitante').required('Valor não pode ser vazio'),\n  horario: Yup.string().label('Horário da visita').required('Escolha um horário para a visita')\n});\n\nconst onSubmit = values => {\n  alert(JSON.stringify(values, null, 2));\n};\n\nconst INSAForm = () => {\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit\n  });\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Formul\\xE1rio de Agendamento de Visita\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"fieldset\", {\n    id: \"instituicao\",\n    className: \"elements-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    className: \"title-box-element\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, \"INSTITUI\\xC7\\xC3O VISITANTE\"), React.createElement(TextInput, {\n    id: \"nomeInstituicao\",\n    type: \"text\",\n    label: \"Nome da Institui\\xE7\\xE3o Visitante:\",\n    placeholder: \"Nome da institui\\xE7\\xE3o visitante\",\n    error: formik.touched.nomeInstituicao && formik.errors.nomeInstituicao,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(TelephoneInput, {\n    id: \"telefoneInstituicao\",\n    type: \"text\",\n    label: \"Telefone da Institui\\xE7\\xE3o visitante:\",\n    placeholder: \"Telefone da Institui\\xE7\\xE3o visitante\",\n    error: formik.touched.telefoneInstituicao && formik.errors.telefoneInstituicao,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    mask: (['(0', /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/], ['(0', /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }), React.createElement(TextInput, {\n    id: \"emailInstituicao\",\n    type: \"email\",\n    label: \"E-mail da Institui\\xE7\\xE3o visitante:\",\n    placeholder: \"E-mail da Institui\\xE7\\xE3o visitante\",\n    error: formik.touched.emailInstituicao && formik.errors.emailInstituicao,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }))), React.createElement(\"fieldset\", {\n    id: \"responsavel\",\n    className: \"elements-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(\"legend\", {\n    className: \"title-box-element\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, \"RESPONS\\xC1VEL PELA VISITA\"), React.createElement(TextInput, {\n    id: \"nomeResponsavel\",\n    type: \"text\",\n    label: \"Nome do respons\\xE1vel pela visita:\",\n    placeholder: \"Nome do respons\\xE1vel pela visita\",\n    error: formik.touched.nomeResponsavel && formik.errors.nomeResponsavel,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    id: \"telefoneResponsavel\",\n    type: \"text\",\n    label: \"Telefone do Respons\\xE1vel pela visita:\",\n    placeholder: \"Telefone do Respons\\xE1vel pela visita\",\n    error: formik.touched.telefoneResponsavel && formik.errors.telefoneResponsavel,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130\n    },\n    __self: this\n  }), React.createElement(TextInput, {\n    id: \"emailresponsavel\",\n    type: \"email\",\n    label: \"E-mail do respons\\xE1vel:\",\n    placeholder: \"E-mail do respons\\xE1vel\",\n    error: formik.touched.emailresponsavel && formik.errors.emailresponsavel,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"elements-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    id: \"nVisitantes\",\n    type: \"number\",\n    label: \"N\\xFAmero de visitantes:\",\n    placeholder: \"N\\xFAmero de visitantes\",\n    error: formik.touched.nVisitantes && formik.errors.nVisitantes,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }), React.createElement(TextInput, {\n    id: \"dataVisita\",\n    type: \"text\",\n    label: \"Data da visita:\",\n    error: formik.touched.dataVisita && formik.errors.dataVisita,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  })), React.createElement(TextInput, {\n    id: \"objetivoCaracteristicas\",\n    type: \"text\",\n    label: \"Objetivo e caracter\\xEDsticas da turma:\",\n    placeholder: \"Objetivo e caracter\\xEDsticas da turma\",\n    error: formik.touched.objetivoCaracteristicas && formik.errors.objetivoCaracteristicas,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  })), React.createElement(RadioButtonGroup, {\n    id: \"horarios\",\n    label: \"HOR\\xC1RIO DA VISITA\",\n    value: formik.values.horario,\n    error: formik.touched.horario && formik.errors.horario,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, React.createElement(RadioButton, {\n    component: RadioButton,\n    name: \"horario\",\n    id: \"horarioManha\",\n    label: \"Manh\\xE3:\",\n    hour: \"8:30h \\xE0s 11:30h\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    className: \"horario\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }), React.createElement(RadioButton, {\n    component: RadioButton,\n    name: \"horario\",\n    id: \"horarioTarde\",\n    label: \"Tarde:\",\n    hour: \"das 13:30h \\xE0s 16:30h\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    className: \"horario\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205\n    },\n    __self: this\n  }), React.createElement(RadioButton, {\n    component: RadioButton,\n    name: \"horario\",\n    id: \"horarioManhaTarde\",\n    label: \"Manh\\xE3 e Tarde:\",\n    hour: \"das 8:30h \\xE0s 16:30h\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    className: \"horario\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"formBtns\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"reset\",\n    className: \"outline\",\n    onClick: formik.resetForm && formik.handleChange,\n    disabled: !formik.dirty || formik.isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227\n    },\n    __self: this\n  }, \"Limpar\"), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228\n    },\n    __self: this\n  }, \"Enviar\"))));\n};\n\nexport default INSAForm;","map":{"version":3,"sources":["/home/rafaelle.xavier/Documentos/visitenos-form-insa/form-app/src/FormVisitenosBootstrap.js"],"names":["React","useFormik","Yup","TelephoneInput","RadioButton","RadioButtonGroup","TextInput","initialValues","nomeInstituicao","telefoneInstituicao","emailInstituicao","nomeResponsavel","telefoneResponsavel","emailresponsavel","nVisitantes","dataVisita","objetivoCaracteristicas","horario","validationSchema","object","shape","string","label","required","email","min","number","date","onSubmit","values","alert","JSON","stringify","INSAForm","formik","handleSubmit","touched","errors","handleChange","handleBlur","resetForm","dirty","isSubmitting"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\n\nimport * as Yup from 'yup';\nimport TelephoneInput from './components/TelephoneInput';\nimport RadioButton from './components/RadioButton';\nimport RadioButtonGroup from './components/RadioButtonGroup';\nimport TextInput from './components/TextInput';\n\n\n\nconst initialValues = {\n    nomeInstituicao: \"\",\n    telefoneInstituicao: \"\",\n    emailInstituicao: \"\",\n    nomeResponsavel: \"\",\n    telefoneResponsavel: \"\",\n    emailresponsavel: \"\",\n    nVisitantes: \"\",\n    dataVisita: \"\",\n    objetivoCaracteristicas: \"\",\n    horario: \"\"\n};\n\nconst validationSchema = Yup.object().shape({\n    nomeInstituicao: Yup.string()\n        .label('Nome instituição visitante')\n        .required('Por favor, digite o nome da Instituição'),\n    telefoneInstituicao: Yup.string()\n        .label('Telefone da instituição visitante')\n        .required('Por favor, digite o número do telefone com DDD'),\n    emailInstituicao: Yup.string()\n        .label('Nome instituição visitante')\n        .email(\"Por favor, adicione um e-mail válido\"),\n    nomeResponsavel: Yup.string()\n        .label('Nome instituição visitante')\n        .min(4, 'Mínimo 4 caracteres')\n        .required('Por favor, digite o nome do Responsável'),\n    telefoneResponsavel: Yup.string()\n        .label('Telefone da instituição visitante')\n        .required('Por favor, digite o número do telefone com DDD'),\n    emailresponsavel: Yup.string()\n        .label('Nome instituição visitante')\n        .email(\"Por favor, adicione um e-mail válido\")\n        .required('Valor não pode ser vazio'),\n    nVisitantes: Yup.number()\n        .label('Número de visitantes')\n        .required('Valor não pode ser vazio'),\n    dataVisita: Yup.date()\n        .label('Data da visita')\n        .required('Valor não pode ser vazio'),\n    objetivoCaracteristicas: Yup.string()\n        .label('Objetivo e características da turma visitante')\n        .required('Valor não pode ser vazio'),\n    horario: Yup.string()\n        .label('Horário da visita')\n        .required('Escolha um horário para a visita')\n})\n\nconst onSubmit = values => {\n    alert(JSON.stringify(values, null, 2));\n};\n\n\nconst INSAForm = () => {\n    const formik = useFormik({\n        initialValues,\n        validationSchema,\n        onSubmit\n    });\n\n    return (\n        <div className=\"container\" >\n            <h1>Formulário de Agendamento de Visita</h1>\n            <hr />\n            <form onSubmit={formik.handleSubmit}>\n                {/*Dados instituição*/}\n                <fieldset id=\"instituicao\" className=\"elements-group\">\n                    <legend className=\"title-box-element\">INSTITUIÇÃO VISITANTE</legend>\n\n                    <TextInput\n                        id=\"nomeInstituicao\"\n                        type=\"text\"\n                        label=\"Nome da Instituição Visitante:\"\n                        placeholder=\"Nome da instituição visitante\"\n                        error={formik.touched.nomeInstituicao && formik.errors.nomeInstituicao}\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                    />\n\n                    <div className=\"input-group\">\n\n                        <TelephoneInput\n                            id=\"telefoneInstituicao\"\n                            type=\"text\"\n                            label=\"Telefone da Instituição visitante:\"\n                            placeholder=\"Telefone da Instituição visitante\"\n                            error={formik.touched.telefoneInstituicao && formik.errors.telefoneInstituicao}\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                            mask={['(0', /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/], ['(0', /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/]}\n                        />\n\n                        <TextInput\n                            id=\"emailInstituicao\"\n                            type=\"email\"\n                            label=\"E-mail da Instituição visitante:\"\n                            placeholder=\"E-mail da Instituição visitante\"\n                            error={formik.touched.emailInstituicao && formik.errors.emailInstituicao}\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                        />\n                    </div>\n                </fieldset>\n\n                {/*Dados responsável pela visita*/}\n                <fieldset id=\"responsavel\" className=\"elements-group\">\n                    <legend className=\"title-box-element\">RESPONSÁVEL PELA VISITA</legend>\n\n                    <TextInput\n                        id=\"nomeResponsavel\"\n                        type=\"text\"\n                        label=\"Nome do responsável pela visita:\"\n                        placeholder=\"Nome do responsável pela visita\"\n                        error={formik.touched.nomeResponsavel && formik.errors.nomeResponsavel}\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                    />\n                    <div className=\"input-group\">\n                        <TextInput\n                            id=\"telefoneResponsavel\"\n                            type=\"text\"\n                            label=\"Telefone do Responsável pela visita:\"\n                            placeholder=\"Telefone do Responsável pela visita\"\n                            error={formik.touched.telefoneResponsavel && formik.errors.telefoneResponsavel}\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                        />\n\n                        <TextInput\n                            id=\"emailresponsavel\"\n                            type=\"email\"\n                            label=\"E-mail do responsável:\"\n                            placeholder=\"E-mail do responsável\"\n                            error={formik.touched.emailresponsavel && formik.errors.emailresponsavel}\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                        />\n                    </div>\n                </fieldset>\n\n\n                {/* Dados gerais sobre a visita*/}\n                <div className=\"elements-group\">\n                    <div className=\"input-group\">\n                        { /* Ajustar para receber apenas números positivos */}\n                        <TextInput\n                            id=\"nVisitantes\"\n                            type=\"number\"\n                            label=\"Número de visitantes:\"\n                            placeholder=\"Número de visitantes\"\n                            error={formik.touched.nVisitantes && formik.errors.nVisitantes}\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                        />\n                        <TextInput\n                            id=\"dataVisita\"\n                            type=\"text\"\n                            label=\"Data da visita:\"\n                            error={formik.touched.dataVisita && formik.errors.dataVisita}\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                        />\n                    </div>\n\n                    { /* aumentar input */}\n                    <TextInput\n                        id=\"objetivoCaracteristicas\"\n                        type=\"text\"\n                        label=\"Objetivo e características da turma:\"\n                        placeholder=\"Objetivo e características da turma\"\n                        error={formik.touched.objetivoCaracteristicas && formik.errors.objetivoCaracteristicas}\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                    />\n                </div>\n\n                {/* horário e locais pretendidos para a visita */}\n                <RadioButtonGroup\n                    id=\"horarios\"\n                    label=\"HORÁRIO DA VISITA\"\n                    value={formik.values.horario}\n                    error={formik.touched.horario && formik.errors.horario}\n                >\n                    <RadioButton\n                        component={RadioButton}\n                        name=\"horario\"\n                        id=\"horarioManha\"\n                        label=\"Manhã:\"\n                        hour=\"8:30h às 11:30h\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        className=\"horario\"\n                    />\n                    <RadioButton\n                        component={RadioButton}\n                        name=\"horario\"\n                        id=\"horarioTarde\"\n                        label=\"Tarde:\"\n                        hour=\"das 13:30h às 16:30h\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        className=\"horario\"\n                    />\n                    <RadioButton\n                        component={RadioButton}\n                        name=\"horario\"\n                        id=\"horarioManhaTarde\"\n                        label=\"Manhã e Tarde:\"\n                        hour=\"das 8:30h às 16:30h\"\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                        className=\"horario\"\n                    />\n                </RadioButtonGroup>\n                <div className=\"formBtns\">\n                    <button type=\"reset\" className=\"outline\" onClick={formik.resetForm && formik.handleChange} disabled={!formik.dirty || formik.isSubmitting}>Limpar</button>\n                    <button type=\"submit\" >Enviar</button>\n                </div>\n            </form>\n        </div>\n\n    );\n};\n\nexport default INSAForm\n"]},"metadata":{},"sourceType":"module"}
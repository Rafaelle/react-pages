{"ast":null,"code":"var _jsxFileName = \"/home/rafaelle.xavier/Documentos/visitenos-form-insa/src/FormVisitenos.js\";\nimport React from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport DataComponent from \"./components/general_components/DataComponent\";\nimport TimeComponent from \"./components/general_components/TimeComponent\";\nimport INSAComponent from \"./components/general_components/local_components/INSAComponent\";\nimport ExperimentalStationComponent from \"./components/general_components/local_components/ExperimentalStationComponent\";\nimport TextInput from \"./components/primary_components/TextInput\";\nimport TextAreaInput from \"./components/primary_components/TextAreInput\";\nconst initialValues = {\n  nomeInstituicao: \"\",\n  telefoneInstituicao: \"\",\n  emailInstituicao: \"\",\n  nomeResponsavel: \"\",\n  telefoneResponsavel: \"\",\n  emailresponsavel: \"\",\n  nVisitantes: \"\",\n  dataVisita: \"\",\n  objetivoCaracteristicas: \"\",\n  horario: \"\"\n};\nconst validationSchema = Yup.object().shape({\n  nomeInstituicao: Yup.string().label('Nome instituição visitante').required('Por favor, digite o nome da Instituição'),\n  telefoneInstituicao: Yup.string().label('Telefone da instituição visitante').min(4, 'Please enter no more than 40 characters').required('Por favor, digite o número do telefone com DDD'),\n  emailInstituicao: Yup.string().label('Nome instituição visitante').email(\"Por favor, adicione um e-mail válido\"),\n  nomeResponsavel: Yup.string().label('Nome instituição visitante').min(4, 'Mínimo 4 caracteres').required('Por favor, digite o nome do Responsável'),\n  telefoneResponsavel: Yup.string().label('Telefone da instituição visitante').required('Por favor, digite o número do telefone com DDD'),\n  emailresponsavel: Yup.string().label('Nome instituição visitante').email(\"Por favor, adicione um e-mail válido\").required('Por favor, digite um endereço de e-mail'),\n  nVisitantes: Yup.number().label('Número de visitantes').required('Por favor, digite um número'),\n  dataVisita: Yup.date().label('Data da visita').required('Por favor, digite uma data'),\n  objetivoCaracteristicas: Yup.string().label('Objetivo e características da turma visitante').required('Por favor, digite o objetivo e características da turma'),\n  horario: Yup.string().label('Horário da visita').required('Por favor, escolha um horário para a visita')\n});\n\nconst onSubmit = values => {\n  alert(JSON.stringify(values, null, 2));\n};\n\nconst INSAForm = () => {\n  const formik = useFormik({\n    initialValues,\n    validationSchema,\n    onSubmit\n  });\n  return React.createElement(\"div\", {\n    className: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Formul\\xE1rio de Agendamento de Visita\"), React.createElement(\"hr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, \"As atividades de visitas ao INSA, ocorrem preferencialmente \\xE0s ter\\xE7as feiras em fun\\xE7\\xE3o da dosponibilidade de t\\xE9cnicas e pesquisadores respons\\xE1veis por cada \\xE1rea e cada pesquisa. Sugerimos que casos isolados devam ser discutidos por telefone ou presencialmente. Preencha este formul\\xE1rio e nos ajude a facilitar seu processo de agendamento de visita ao INSA.\"), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Observa\\xE7\\xF5es:\"), React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, \"Ap\\xF3s o preenchimento dos dados deste formul\\xE1rio, voc\\xEA receber\\xE1 confirma\\xE7\\xE3o e valida\\xE7\\xE3o por e-mail referente as datas e demais pormenores, mediante an\\xE1lise interna.\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, \"Como sugest\\xE3o para melhor aproveitamento em termos de logistica, separe um turno (manh\\xE3 ou tarde) para casa local de experimento. Por exemplo: Sede do INSA (manh\\xE3); Esta\\xE7\\xE3o Experimental (tarde).\"), React.createElement(\"li\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, \"Usar prote\\xE7\\xE3o solar (chap\\xE9u, protetor solar, roupas confort\\xE1veis), trazer garrafinhas com \\xE1gua.\")), React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(DataComponent, {\n    id: \"instituicao\",\n    legend: \"INSTITUI\\xC7\\xC3O VISITANTE\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    idName: \"nomeInstituicao\",\n    nameLabel: \"Nome da Institui\\xE7\\xE3o Visitante\",\n    errorName: formik.touched.nomeInstituicao && formik.errors.nomeInstituicao,\n    idTelphone: \"telefoneInstituicao\",\n    telephoneLabel: \"Telefone da Institui\\xE7\\xE3o visitante\",\n    errorTelphone: formik.touched.telefoneInstituicao && formik.errors.telefoneInstituicao,\n    idEmail: \"emailInstituicao\",\n    emailLabel: \"E-mail da Institui\\xE7\\xE3o visitante\",\n    errorEmail: formik.touched.emailInstituicao && formik.errors.emailInstituicao,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), React.createElement(DataComponent, {\n    id: \"responsavel\",\n    legend: \"RESPONS\\xC1VEL PELA VISITA\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    idName: \"nomeResponsavel\",\n    nameLabel: \"Nome do respons\\xE1vel pela visita\",\n    errorName: formik.touched.nomeResponsavel && formik.errors.nomeResponsavel,\n    idTelphone: \"telefoneResponsavel\",\n    telephoneLabel: \"Telefone do Respons\\xE1vel pela visita\",\n    errorTelphone: formik.touched.telefoneResponsavel && formik.errors.telefoneResponsavel,\n    idEmail: \"emailresponsavel\",\n    emailLabel: \"E-mail do respons\\xE1vel pela visita\",\n    errorEmail: formik.touched.emailresponsavel && formik.errors.emailresponsavel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"elements-group div-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"input-group-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    id: \"nVisitantes\",\n    type: \"number\",\n    label: \"N\\xFAmero de visitantes:\",\n    placeholder: \"N\\xFAmero de visitantes\",\n    error: formik.touched.nVisitantes && formik.errors.nVisitantes,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  }), React.createElement(TextInput, {\n    id: \"dataVisita\",\n    type: \"text\",\n    label: \"Data da visita:\",\n    error: formik.touched.dataVisita && formik.errors.dataVisita,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })), React.createElement(TextAreaInput, {\n    id: \"objetivoCaracteristicas\",\n    type: \"text\",\n    label: \"Objetivo e caracter\\xEDsticas da turma:\",\n    placeholder: \"Objetivo e caracter\\xEDsticas da turma\",\n    error: formik.touched.objetivoCaracteristicas && formik.errors.objetivoCaracteristicas,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  })), React.createElement(TimeComponent, {\n    value: formik.values.horario,\n    error: formik.touched.horario && formik.errors.horario,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"div-group\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  }, React.createElement(\"h4\", {\n    className: \"title-box-element\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, \"OP\\xC7\\xD5ES DE PROJETO E EXPERIMENTOS A SEREM VISITADOS\"), React.createElement(INSAComponent, {\n    value: formik.values.localINSA,\n    error: formik.touched.localINSA && formik.errors.localINSA,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }), React.createElement(ExperimentalStationComponent, {\n    value: formik.values.localEstacao,\n    error: formik.touched.localEstacao && formik.errors.localEstacao,\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"formBtns\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"reset\",\n    className: \"outline\",\n    onClick: formik.resetForm && formik.handleChange,\n    disabled: !formik.dirty || formik.isSubmitting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189\n    },\n    __self: this\n  }, \"Limpar\"), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }, \"Enviar\"))));\n};\n\nexport default INSAForm;","map":{"version":3,"sources":["/home/rafaelle.xavier/Documentos/visitenos-form-insa/src/FormVisitenos.js"],"names":["React","useFormik","Yup","DataComponent","TimeComponent","INSAComponent","ExperimentalStationComponent","TextInput","TextAreaInput","initialValues","nomeInstituicao","telefoneInstituicao","emailInstituicao","nomeResponsavel","telefoneResponsavel","emailresponsavel","nVisitantes","dataVisita","objetivoCaracteristicas","horario","validationSchema","object","shape","string","label","required","min","email","number","date","onSubmit","values","alert","JSON","stringify","INSAForm","formik","handleSubmit","handleChange","handleBlur","touched","errors","localINSA","localEstacao","resetForm","dirty","isSubmitting"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useFormik } from \"formik\";\n\nimport * as Yup from \"yup\";\n\nimport DataComponent from \"./components/general_components/DataComponent\";\nimport TimeComponent from \"./components/general_components/TimeComponent\";\nimport INSAComponent from \"./components/general_components/local_components/INSAComponent\";\nimport ExperimentalStationComponent from \"./components/general_components/local_components/ExperimentalStationComponent\";\n\nimport TextInput from \"./components/primary_components/TextInput\";\nimport TextAreaInput from \"./components/primary_components/TextAreInput\";\n\n\nconst initialValues = {\n    nomeInstituicao: \"\",\n    telefoneInstituicao: \"\",\n    emailInstituicao: \"\",\n    nomeResponsavel: \"\",\n    telefoneResponsavel: \"\",\n    emailresponsavel: \"\",\n    nVisitantes: \"\",\n    dataVisita: \"\",\n    objetivoCaracteristicas: \"\",\n    horario: \"\"\n};\n\nconst validationSchema = Yup.object().shape({\n    nomeInstituicao: Yup.string()\n        .label('Nome instituição visitante')\n        .required('Por favor, digite o nome da Instituição'),\n    telefoneInstituicao: Yup.string()\n        .label('Telefone da instituição visitante')\n        .min(4, 'Please enter no more than 40 characters')\n        .required('Por favor, digite o número do telefone com DDD'),\n    emailInstituicao: Yup.string()\n        .label('Nome instituição visitante')\n        .email(\"Por favor, adicione um e-mail válido\"),\n    nomeResponsavel: Yup.string()\n        .label('Nome instituição visitante')\n        .min(4, 'Mínimo 4 caracteres')\n        .required('Por favor, digite o nome do Responsável'),\n    telefoneResponsavel: Yup.string()\n        .label('Telefone da instituição visitante')\n        .required('Por favor, digite o número do telefone com DDD'),\n    emailresponsavel: Yup.string()\n        .label('Nome instituição visitante')\n        .email(\"Por favor, adicione um e-mail válido\")\n        .required('Por favor, digite um endereço de e-mail'),\n    nVisitantes: Yup.number()\n        .label('Número de visitantes')\n        .required('Por favor, digite um número'),\n    dataVisita: Yup.date()\n        .label('Data da visita')\n        .required('Por favor, digite uma data'),\n    objetivoCaracteristicas: Yup.string()\n        .label('Objetivo e características da turma visitante')\n        .required('Por favor, digite o objetivo e características da turma'),\n    horario: Yup.string()\n        .label('Horário da visita')\n        .required('Por favor, escolha um horário para a visita')\n})\n\nconst onSubmit = values => {\n\n    alert(JSON.stringify(values, null, 2));\n};\n\nconst INSAForm = () => {\n    const formik = useFormik({\n        initialValues,\n        validationSchema,\n        onSubmit\n    });\n\n    return (\n        <div className=\"container\" >\n            <h1>Formulário de Agendamento de Visita</h1>\n            <hr />\n            <p>\n                As atividades de visitas ao INSA, ocorrem preferencialmente às terças feiras em função da dosponibilidade de técnicas e pesquisadores responsáveis por cada área e cada pesquisa. Sugerimos que casos isolados devam ser discutidos por telefone ou presencialmente. Preencha este formulário e nos ajude a facilitar seu processo de agendamento de visita ao INSA.\n            </p>\n            <h4>Observações:</h4>\n            <ul>\n                <li>Após o preenchimento dos dados deste formulário, você receberá confirmação e validação por e-mail referente as datas e demais pormenores, mediante análise interna.</li>\n                <li>Como sugestão para melhor aproveitamento em termos de logistica, separe um turno (manhã ou tarde) para casa local de experimento. Por exemplo: Sede do INSA (manhã); Estação Experimental (tarde).</li>\n                <li>Usar proteção solar (chapéu, protetor solar, roupas confortáveis), trazer garrafinhas com água.</li>\n            </ul>\n            <form onSubmit={formik.handleSubmit}>\n                {/*Dados instituição*/}\n                <DataComponent\n                    id=\"instituicao\"\n                    legend=\"INSTITUIÇÃO VISITANTE\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    idName=\"nomeInstituicao\"\n                    nameLabel=\"Nome da Instituição Visitante\"\n                    errorName={formik.touched.nomeInstituicao && formik.errors.nomeInstituicao}\n                    idTelphone=\"telefoneInstituicao\"\n                    telephoneLabel=\"Telefone da Instituição visitante\"\n                    errorTelphone={formik.touched.telefoneInstituicao && formik.errors.telefoneInstituicao}\n                    idEmail=\"emailInstituicao\"\n                    emailLabel=\"E-mail da Instituição visitante\"\n                    errorEmail={formik.touched.emailInstituicao && formik.errors.emailInstituicao}\n                />\n                {/*Dados responsável pela visita*/}\n\n                <DataComponent\n                    id=\"responsavel\"\n                    legend=\"RESPONSÁVEL PELA VISITA\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    idName=\"nomeResponsavel\"\n                    nameLabel=\"Nome do responsável pela visita\"\n                    errorName={formik.touched.nomeResponsavel && formik.errors.nomeResponsavel}\n                    idTelphone=\"telefoneResponsavel\"\n                    telephoneLabel=\"Telefone do Responsável pela visita\"\n                    errorTelphone={formik.touched.telefoneResponsavel && formik.errors.telefoneResponsavel}\n                    idEmail=\"emailresponsavel\"\n                    emailLabel=\"E-mail do responsável pela visita\"\n                    errorEmail={formik.touched.emailresponsavel && formik.errors.emailresponsavel}\n                />\n\n                {/* Dados gerais sobre a visita*/}\n                <div className=\"elements-group div-group\">\n                    <div className=\"input-group-row\">\n                        { /* Ajustar para receber apenas números positivos */}\n                        <TextInput\n                            id=\"nVisitantes\"\n                            type=\"number\"\n                            label=\"Número de visitantes:\"\n                            placeholder=\"Número de visitantes\"\n                            error={formik.touched.nVisitantes && formik.errors.nVisitantes}\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                        />\n                        <TextInput\n                            id=\"dataVisita\"\n                            type=\"text\"\n                            label=\"Data da visita:\"\n                            error={formik.touched.dataVisita && formik.errors.dataVisita}\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                        />\n                    </div>\n                    <TextAreaInput\n                        id=\"objetivoCaracteristicas\"\n                        type=\"text\"\n                        label=\"Objetivo e características da turma:\"\n                        placeholder=\"Objetivo e características da turma\"\n                        error={formik.touched.objetivoCaracteristicas && formik.errors.objetivoCaracteristicas}\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                    />\n                </div>\n\n                {/* horário pretendido para a visita */}\n                <TimeComponent\n                    value={formik.values.horario}\n                    error={formik.touched.horario && formik.errors.horario}\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                />\n                {/* Locais pretendidos para a visita */}\n                <div className=\"div-group\">\n                    <h4 className=\"title-box-element\">\n                        OPÇÕES DE PROJETO E EXPERIMENTOS A SEREM VISITADOS\n                    </h4>\n\n                    {/*Locais de visitação na sede do INSA*/}\n                    <INSAComponent\n                        value={formik.values.localINSA}\n                        error={formik.touched.localINSA && formik.errors.localINSA}\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                    />\n\n                    {/*Locais de visitação na Estação Experimental*/}\n\n                    <ExperimentalStationComponent\n                        value={formik.values.localEstacao}\n                        error={formik.touched.localEstacao && formik.errors.localEstacao}\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                    />\n\n                </div>\n                <div className=\"formBtns\">\n                    <button type=\"reset\" className=\"outline\" onClick={formik.resetForm && formik.handleChange} disabled={!formik.dirty || formik.isSubmitting}>Limpar</button>\n                    <button type=\"submit\" >Enviar</button>\n                </div>\n            </form>\n\n\n        </div>\n    );\n};\n\nexport default INSAForm;\n"]},"metadata":{},"sourceType":"module"}
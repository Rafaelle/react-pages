{"version":3,"sources":["components/primary_components/Label.js","components/primary_components/InputFeedback.js","components/primary_components/TextMaskedInput.js","components/primary_components/TextInput.js","components/general_components/DataComponent.js","components/primary_components/ChoiseButtonGroup.js","components/primary_components/ChoiseButton.js","components/general_components/TimeComponent.js","components/general_components/local_components/INSAComponent.js","components/general_components/local_components/ExperimentalStationComponent.js","FormVisitenos.js","index.js"],"names":["Label","error","className","children","props","InputFeedback","TextMaskedInput","type","id","label","placeholder","onChange","mask","onBlur","value","classes","classnames","htmlFor","TextInput","DataComponent","legend","idName","nameLabel","errorName","idTelphone","telephoneLabel","errorTelphone","valueTelephone","idEmail","emailLabel","errorEmail","ChoiseButtonGroup","idBox","classDirectionInputgroup","ChoiseButton","name","hour","classNameInput","TimeComponent","component","INSAComponent","ExperimentalStationComponent","initialValues","nomeInstituicao","telefoneInstituicao","emailInstituicao","nomeResponsavel","telefoneResponsavel","emailresponsavel","nVisitantes","dataVisita","objetivoCaracteristicas","horario","validationSchema","Yup","shape","required","min","email","onSubmit","values","alert","JSON","stringify","INSAForm","formik","useFormik","handleSubmit","handleChange","handleBlur","touched","errors","localINSA","localEstacao","onClick","resetForm","disabled","dirty","isSubmitting","App","FormVisitenos","Component","rootElement","document","getElementById","ReactDOM","render"],"mappings":"uUAYeA,EAVD,SAAC,GAA6C,EAA3CC,MAA2C,EAApCC,UAAqC,IAA1BC,EAAyB,EAAzBA,SAAaC,EAAY,gDACxD,OAEI,yCAAOF,UAAU,SAAYE,GACxBD,ICDEE,EAHO,SAAC,GAAD,IAAGJ,EAAH,EAAGA,MAAH,OACpBA,EAAQ,yBAAKC,UAAU,kBAAkBD,GAAe,MC+B3CK,EA3BS,SAAC,GAAuF,IAArFC,EAAoF,EAApFA,KAAMC,EAA8E,EAA9EA,GAAIC,EAA0E,EAA1EA,MAAOC,EAAmE,EAAnEA,YAAaT,EAAsD,EAAtDA,MAAOU,EAA+C,EAA/CA,SAAUT,EAAqC,EAArCA,UAAWU,EAA0B,EAA1BA,KAAaC,GAAa,EAApBC,MAAoB,EAAbD,QACxFE,EAAUC,IACZ,gBACA,CACI,QAAWf,GAEfC,GAGJ,OACI,yBAAKA,UAAWa,GACZ,kBAAC,EAAD,CAAOE,QAAST,EAAIP,MAAOA,GACtBQ,GAEL,kBAAC,IAAD,CACID,GAAIA,EACJN,UAAU,aACVK,KAAMA,EACNG,YAAaA,EACbC,SAAUA,EACVC,KAAMA,EACNC,OAAQA,IACZ,kBAAC,EAAD,CAAeZ,MAAOA,MCMnBiB,EA7BG,SAAC,GAAgF,IAA9EX,EAA6E,EAA7EA,KAAMC,EAAuE,EAAvEA,GAAIC,EAAmE,EAAnEA,MAAOC,EAA4D,EAA5DA,YAAaT,EAA+C,EAA/CA,MAAOU,EAAwC,EAAxCA,SAAUT,EAA8B,EAA9BA,UAAWW,EAAmB,EAAnBA,OAAQD,EAAW,EAAXA,KAE7EG,EAAUC,IACZ,gBACA,aACA,CACI,QAAWf,GAEfC,GAEJ,OACI,yBAAKA,UAAWa,GACZ,kBAAC,EAAD,CAAOE,QAAST,EAAIP,MAAOA,GACtBQ,GAEL,2BACID,GAAIA,EACJN,UAAU,aACVK,KAAMA,EACNG,YAAaA,EACbC,SAAUA,EACVE,OAAQA,EACRD,KAAMA,IAEV,kBAAC,EAAD,CAAeX,MAAOA,MCoBnBkB,EA7CO,SAAC,GAA6J,IAA3JX,EAA0J,EAA1JA,GAAGY,EAAuJ,EAAvJA,OAAQT,EAA+I,EAA/IA,SAAUE,EAAqI,EAArIA,OAAQQ,EAA6H,EAA7HA,OAAQC,EAAqH,EAArHA,UAAUC,EAA2G,EAA3GA,UAAWC,EAAgG,EAAhGA,WAAYC,EAAoF,EAApFA,eAAgBC,EAAoE,EAApEA,cAAcC,EAAsD,EAAtDA,eAAgBC,EAAsC,EAAtCA,QAASC,EAA6B,EAA7BA,WAAYC,EAAiB,EAAjBA,WACxJf,EAAUC,IACZ,iBACA,aAEJ,OAEI,8BAAUR,GAAIA,EAAIN,UAAWa,GACzB,4BAAQb,UAAU,0BAA0BkB,GAE5C,kBAAC,EAAD,CACIZ,GAAIa,EACJd,KAAK,OACLE,MAAOa,EAAY,IACnBZ,YAAaY,EACbrB,MAAOsB,EACPZ,SAAUA,EACVE,OAAQA,IAEZ,yBAAKX,UAAU,mBACX,kBAAC,EAAD,CACIM,GAAIgB,EACJjB,KAAK,OACLE,MAAOgB,EAAiB,IACxBf,YAAae,EACbxB,MAAOyB,EACPf,SAAUA,EACVE,OAAQA,EACRD,KAAM,CAAC,IAAK,IAAK,KAAM,KAAM,IAAK,IAAK,KAAM,KAAM,KAAM,KAAK,KAAM,IAAK,KAAM,KAAM,KAAM,MAC3FE,MAASa,IAEb,kBAAC,EAAD,CACInB,GAAIoB,EACJrB,KAAK,QACLE,MAAOoB,EAAa,IACpBnB,YAAamB,EACb5B,MAAO6B,EACPnB,SAAUA,EACVE,OAAQA,OClBbkB,EApBW,SAAC,GAAgF,IAA9EC,EAA6E,EAA7EA,MAAOxB,EAAsE,EAAtEA,GAAIC,EAAkE,EAAlEA,MAAOR,EAA2D,EAA3DA,MAAOC,EAAoD,EAApDA,UAAWC,EAAyC,EAAzCA,SAAU8B,EAA+B,EAA/BA,yBACjElB,EAAUC,IACZ,YACA,CACI,QAAWf,GAEfC,GAEJ,OACI,8BAAUM,GAAIwB,EAAO9B,UAAWa,GAC5B,4BAAQb,UAAU,0BAA2BO,GAC7C,6BACA,yBAAKD,GAAIA,EAAIN,UAAW+B,GACnB9B,GAEL,kBAAC,EAAD,CAAeF,MAAOA,MCOnBiC,EAvBM,SAAC,GAAyF,IAAvFC,EAAsF,EAAtFA,KAAM3B,EAAgF,EAAhFA,GAAIM,EAA4E,EAA5EA,MAAOL,EAAqE,EAArEA,MAAOE,EAA8D,EAA9DA,SAAUE,EAAoD,EAApDA,OAAQX,EAA4C,EAA5CA,UAAWkC,EAAiC,EAAjCA,KAAM7B,EAA2B,EAA3BA,KAAM8B,EAAqB,EAArBA,eAE/EtB,EAAUC,IACZd,GAEJ,OACI,yBAAKA,UAAWa,GACZ,2BACIoB,KAAMA,EACN3B,GAAIA,EACJD,KAAMA,EACNO,MAAOA,EACPH,SAAUA,EACVE,OAAQA,EACRX,UAAWc,IAAW,CAAEqB,qBAE5B,kBAAC,EAAD,CAAOpB,QAAST,GACXC,EADL,IACY,6BADZ,IACoB2B,KC0CjBE,EA1DO,SAAC,GAAwC,IAAtCxB,EAAqC,EAArCA,MAAOb,EAA8B,EAA9BA,MAAOU,EAAuB,EAAvBA,SAAUE,EAAa,EAAbA,OAE7C,OAEI,kBAAC,EAAD,CACImB,MAAM,cACNxB,GAAG,WACHC,MAAM,uBACNK,MAAOA,EACPb,MAAOA,EACPC,UAAU,iBACV+B,yBAAyB,mBACzB,kBAAC,EAAD,CACIM,UAAWL,EACXC,KAAK,UACL3B,GAAG,eACHD,KAAK,QACLE,MAAM,YACN2B,KAAK,qBACLzB,SAAUA,EACVE,OAAQA,EACRX,UAAU,UACVmC,eAAe,eACfvB,MAAM,aAEV,kBAAC,EAAD,CACIyB,UAAWL,EACXC,KAAK,UACL3B,GAAG,eACHD,KAAK,QACLE,MAAM,SACN2B,KAAK,0BACLzB,SAAUA,EACVE,OAAQA,EACRX,UAAU,UACVmC,eAAe,eACfvB,MAAM,UAGV,kBAAC,EAAD,CACIyB,UAAWL,EACXC,KAAK,UACL3B,GAAG,oBACHD,KAAK,QACLE,MAAM,oBACN2B,KAAK,yBACLzB,SAAUA,EACVE,OAAQA,EACRX,UAAU,UACVmC,eAAe,eACfvB,MAAM,uBCWP0B,EA7DO,SAAC,GAAwC,IAAtC1B,EAAqC,EAArCA,MAAOb,EAA8B,EAA9BA,MAAOU,EAAuB,EAAvBA,SAAUE,EAAa,EAAbA,OAE7C,OACI,kBAAC,EAAD,CACIL,GAAG,WACHC,MAAM,YACNK,MAAOA,EACPb,MAAOA,EACPgC,yBAAyB,sBAEzB,+CAEA,kBAAC,EAAD,CACIE,KAAK,YACL3B,GAAG,4BACHM,MAAM,iEACNP,KAAK,WACLE,MAAM,iEACNE,SAAUA,EACVE,OAAQA,EACRX,UAAU,QACVmC,eAAe,oBAEnB,kBAAC,EAAD,CACIF,KAAK,YACL3B,GAAG,wBACHM,MAAM,0CACNP,KAAK,WACLE,MAAM,0CACNE,SAAUA,EACVE,OAAQA,EACRX,UAAU,QACVmC,eAAe,oBAEnB,kBAAC,EAAD,CACIF,KAAK,YACL3B,GAAG,0CACHM,MAAM,8EACNP,KAAK,WACLE,MAAM,8EACNE,SAAUA,EACVE,OAAQA,EACRX,UAAU,QACVmC,eAAe,oBAGnB,kBAAC,EAAD,CACIF,KAAK,YACL3B,GAAG,gBACHM,MAAM,2BACNP,KAAK,WACLE,MAAM,2BACNE,SAAUA,EACVE,OAAQA,EACRX,UAAU,QACVmC,eAAe,sBCgHhBI,EAvKsB,SAAC,GAAwC,IAAtC3B,EAAqC,EAArCA,MAAOb,EAA8B,EAA9BA,MAAOU,EAAuB,EAAvBA,SAAUE,EAAa,EAAbA,OAC5D,OAEI,kBAAC,EAAD,CACIL,GAAG,sBACHC,MAAM,6BACNK,MAAOA,EACPb,MAAOA,EACPgC,yBAAyB,sBAEzB,yBAAKzB,GAAG,aACJ,+CACA,kBAAC,EAAD,CACI2B,KAAK,2BACL3B,GAAG,cACHM,MAAM,cACNP,KAAK,WACLE,MAAM,cACNE,SAAUA,EACVE,OAAQA,EACRX,UAAU,QACVmC,eAAe,oBAGnB,kBAAC,EAAD,CACIF,KAAK,2BACL3B,GAAG,eACHM,MAAM,mBACNP,KAAK,WACLE,MAAM,mBACNE,SAAUA,EACVE,OAAQA,EACRX,UAAU,QACVmC,eAAe,oBAGnB,kBAAC,EAAD,CACIF,KAAK,2BACL3B,GAAG,uBACHM,MAAM,iCACNP,KAAK,WACLE,MAAM,iCACNE,SAAUA,EACVE,OAAQA,EACRX,UAAU,QACVmC,eAAe,oBAGnB,kBAAC,EAAD,CACIF,KAAK,2BACL3B,GAAG,uBACHM,MAAM,iCACNP,KAAK,WACLE,MAAM,iCACNE,SAAUA,EACVE,OAAQA,EACRX,UAAU,QACVmC,eAAe,oBAGnB,kBAAC,EAAD,CACIF,KAAK,2BACL3B,GAAG,qCACHM,MAAM,2CACNP,KAAK,WACLE,MAAM,2CACNE,SAAUA,EACVE,OAAQA,EACRX,UAAU,QACVmC,eAAe,oBAGnB,kBAAC,EAAD,CACIF,KAAK,2BACL3B,GAAG,iBACHM,MAAM,6BACNP,KAAK,WACLE,MAAM,6BACNE,SAAUA,EACVE,OAAQA,EACRX,UAAU,QACVmC,eAAe,oBAGnB,kBAAC,EAAD,CACIF,KAAK,2BACL3B,GAAG,iBACHM,MAAM,gCACNP,KAAK,WACLE,MAAM,gCACNE,SAAUA,EACVE,OAAQA,EACRX,UAAU,QACVmC,eAAe,oBAGnB,kBAAC,EAAD,CACIF,KAAK,2BACL3B,GAAG,2BACHM,MAAM,uFACNP,KAAK,WACLE,MAAM,uFACNE,SAAUA,EACVE,OAAQA,EACRX,UAAU,QACVmC,eAAe,qBAKvB,yBAAK7B,GAAG,gBACJ,+CAGA,kBAAC,EAAD,CACI2B,KAAK,2BACL3B,GAAG,sBACHM,MAAM,4CACNP,KAAK,WACLE,MAAM,4CACNE,SAAUA,EACVE,OAAQA,EACRX,UAAU,QACVmC,eAAe,oBAGnB,kBAAC,EAAD,CACIF,KAAK,2BACL3B,GAAG,4BACHM,MAAM,4CACNP,KAAK,WACLE,MAAM,4CACNE,SAAUA,EACVE,OAAQA,EACRX,UAAU,QACVmC,eAAe,oBAGnB,kBAAC,EAAD,CACIF,KAAK,2BACL3B,GAAG,qBACHM,MAAM,0CACNP,KAAK,WACLE,MAAM,0CACNE,SAAUA,EACVE,OAAQA,EACRX,UAAU,QACVmC,eAAe,oBAGnB,kBAAC,EAAD,CACIF,KAAK,2BACL3B,GAAG,WACHM,MAAM,0BACNP,KAAK,WACLE,MAAM,0BACNE,SAAUA,EACVE,OAAQA,EACRX,UAAU,QACVmC,eAAe,uBCrJ7BK,EAAgB,CAClBC,gBAAiB,GACjBC,oBAAqB,GACrBC,iBAAkB,GAClBC,gBAAiB,GACjBC,oBAAqB,GACrBC,iBAAkB,GAClBC,YAAa,GACbC,WAAY,GACZC,wBAAyB,GACzBC,QAAS,IAGPC,EAAmBC,MAAaC,MAAM,CACxCZ,gBAAiBW,MACZ7C,MAAM,oCACN+C,SAAS,iDACdZ,oBAAqBU,MAChB7C,MAAM,2CACNgD,IAAI,EAAG,2CACPD,SAAS,qDACdX,iBAAkBS,MACb7C,MAAM,oCACNiD,MAAM,2CACXZ,gBAAiBQ,MACZ7C,MAAM,oCACNgD,IAAI,EAAG,0BACPD,SAAS,8CACdT,oBAAqBO,MAChB7C,MAAM,2CACN+C,SAAS,qDACdR,iBAAkBM,MACb7C,MAAM,oCACNiD,MAAM,2CACNF,SAAS,8CACdP,YAAaK,MACR7C,MAAM,2BACN+C,SAAS,kCACdN,WAAYI,MACP7C,MAAM,kBACN+C,SAAS,8BACdL,wBAAyBG,MACpB7C,MAAM,oDACN+C,SAAS,8DACdJ,QAASE,MACJ7C,MAAM,wBACN+C,SAAS,oDAGZG,EAAW,SAAAC,GAEbC,MAAMC,KAAKC,UAAUH,EAAQ,KAAM,KAsIxBI,EAnIE,WACb,IAAMC,EAASC,YAAU,CACrBxB,gBACAW,mBACAM,aAGJ,OACI,yBAAKzD,UAAU,aACX,sEACA,6BACA,2ZAGA,kDACA,4BACI,8NACA,iPACA,+IAEJ,0BAAMyD,SAAUM,EAAOE,cAEnB,kBAAC,EAAD,CACI3D,GAAG,cACHY,OAAO,8BACPT,SAAUsD,EAAOG,aACjBvD,OAAQoD,EAAOI,WACfhD,OAAO,kBACPC,UAAU,sCACVC,UAAW0C,EAAOK,QAAQ3B,iBAAmBsB,EAAOM,OAAO5B,gBAC3DnB,WAAW,sBACXC,eAAe,0CACfC,cAAeuC,EAAOK,QAAQ1B,qBAAuBqB,EAAOM,OAAO3B,oBACnEhB,QAAQ,mBACRC,WAAW,wCACXC,WAAYmC,EAAOK,QAAQzB,kBAAoBoB,EAAOM,OAAO1B,iBAC7DlB,eAAkBsC,EAAOL,OAAOhB,sBAIpC,kBAAC,EAAD,CACIpC,GAAG,cACHY,OAAO,6BACPT,SAAUsD,EAAOG,aACjBvD,OAAQoD,EAAOI,WACfhD,OAAO,kBACPC,UAAU,qCACVC,UAAW0C,EAAOK,QAAQxB,iBAAmBmB,EAAOM,OAAOzB,gBAC3DtB,WAAW,sBACXC,eAAe,yCACfC,cAAeuC,EAAOK,QAAQvB,qBAAuBkB,EAAOM,OAAOxB,oBACnEnB,QAAQ,mBACRC,WAAW,uCACXC,WAAYmC,EAAOK,QAAQtB,kBAAoBiB,EAAOM,OAAOvB,mBAIjE,yBAAK9C,UAAU,4BACX,yBAAKA,UAAU,mBAEX,kBAAC,EAAD,CACIM,GAAG,cACHD,KAAK,SACLE,MAAM,2BACNC,YAAY,0BACZT,MAAOgE,EAAOK,QAAQrB,aAAegB,EAAOM,OAAOtB,YACnDtC,SAAUsD,EAAOG,aACjBvD,OAAQoD,EAAOI,aAEnB,kBAAC,EAAD,CACI7D,GAAG,aACHD,KAAK,OACLE,MAAM,kBACNR,MAAOgE,EAAOK,QAAQpB,YAAce,EAAOM,OAAOrB,WAClDvC,SAAUsD,EAAOG,aACjBvD,OAAQoD,EAAOI,cAGvB,kBAAC,EAAD,CACI7D,GAAG,0BACHD,KAAK,OACLE,MAAM,0CACNC,YAAY,yCACZT,MAAOgE,EAAOK,QAAQnB,yBAA2Bc,EAAOM,OAAOpB,wBAC/DxC,SAAUsD,EAAOG,aACjBvD,OAAQoD,EAAOI,cAKvB,kBAAC,EAAD,CACIvD,MAAOmD,EAAOL,OAAOR,QACrBnD,MAAOgE,EAAOK,QAAQlB,SAAWa,EAAOM,OAAOnB,QAC/CzC,SAAUsD,EAAOG,aACjBvD,OAAQoD,EAAOI,aAGnB,yBAAKnE,UAAU,aACX,wBAAIA,UAAU,qBAAd,4DAKA,kBAAC,EAAD,CACIY,MAAOmD,EAAOL,OAAOY,UACrBvE,MAAOgE,EAAOK,QAAQE,WAAaP,EAAOM,OAAOC,UACjD7D,SAAUsD,EAAOG,aACjBvD,OAAQoD,EAAOI,aAKnB,kBAAC,EAAD,CACIvD,MAAOmD,EAAOL,OAAOa,aACrBxE,MAAOgE,EAAOK,QAAQG,cAAgBR,EAAOM,OAAOE,aACpD9D,SAAUsD,EAAOG,aACjBvD,OAAQoD,EAAOI,cAIvB,yBAAKnE,UAAU,YACX,4BAAQK,KAAK,QAAQL,UAAU,UAAUwE,QAAST,EAAOU,WAAaV,EAAOG,aAAcQ,UAAWX,EAAOY,OAASZ,EAAOa,cAA7H,UACA,4BAAQvE,KAAK,UAAb,cCvLdwE,G,uLAEF,OACE,yBAAK7E,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC8E,EAAD,Y,GALQC,cAWZC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,kBAAC,EAAD,MAASJ,K","file":"static/js/main.a1cd4a26.chunk.js","sourcesContent":["import React from 'react';\n\nconst Label = ({ error, className, children, ...props }) => {\n    return (\n\n        <label className=\"label\" {...props}>\n            {children}\n        </label>\n\n    );\n};\n\nexport default Label;","import React from 'react';\n\nconst InputFeedback = ({ error }) =>\n  error ? <div className=\"input-feedback\">{error}</div> : null;\n\nexport default InputFeedback;","import React from 'react';\nimport MaskedInput from 'react-text-mask';\nimport classnames from 'classnames';\nimport Label from './Label';\nimport InputFeedback from './InputFeedback';\n\n\nconst TextMaskedInput = ({ type, id, label, placeholder, error, onChange, className, mask, value, onBlur }) => {\n    const classes = classnames(\n        'input-element',\n        {\n            'error': !!error,\n        },\n        className\n    );\n\n    return (\n        <div className={classes}>\n            <Label htmlFor={id} error={error}>\n                {label}\n            </Label>\n            <MaskedInput\n                id={id}\n                className=\"text-input\"\n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                mask={mask}\n                onBlur={onBlur} />\n            <InputFeedback error={error} />\n        </div>\n    );\n};\n\nexport default TextMaskedInput;\n","import React from 'react';\nimport classnames from 'classnames';\nimport Label from './Label';\nimport InputFeedback from './InputFeedback';\n\n\nconst TextInput = ({ type, id, label, placeholder, error, onChange, className, onBlur, mask }) => {\n    //Adicionar outra classe\n    const classes = classnames(\n        'input-element',\n        'form-group',\n        {\n            'error': !!error,\n        },\n        className\n    );\n    return (\n        <div className={classes}>\n            <Label htmlFor={id} error={error}>\n                {label}\n            </Label>\n            <input\n                id={id}\n                className=\"text-input\"\n                type={type}\n                placeholder={placeholder}\n                onChange={onChange}\n                onBlur={onBlur}\n                mask={mask}\n            />\n            <InputFeedback error={error} />\n        </div>\n    );\n};\n\nexport default TextInput;","import React from \"react\";\nimport classnames from \"classnames\";\nimport TextMaskedInput from \"../primary_components/TextMaskedInput\";\nimport TextInput from \"../primary_components/TextInput\";\n\nconst DataComponent = ({ id,legend, onChange, onBlur, idName, nameLabel,errorName, idTelphone, telephoneLabel, errorTelphone,valueTelephone, idEmail, emailLabel, errorEmail }) => {\n    const classes = classnames(\n        \"elements-group\",\n        \"div-group\"\n    );\n    return (\n\n        <fieldset id={id} className={classes}>\n            <legend className=\"title-fieldset-element\">{legend}</legend>\n\n            <TextInput\n                id={idName}\n                type=\"text\"\n                label={nameLabel + \":\"}\n                placeholder={nameLabel}\n                error={errorName}\n                onChange={onChange}\n                onBlur={onBlur}\n            />\n            <div className=\"input-group-row\">\n                <TextMaskedInput\n                    id={idTelphone}\n                    type=\"text\"\n                    label={telephoneLabel + \":\"}\n                    placeholder={telephoneLabel}\n                    error={errorTelphone}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    mask={[\"(\", \"0\", /\\d/, /\\d/, \")\", \" \", /\\d/, /\\d/, /\\d/, /\\d/,/\\d/, \"-\", /\\d/, /\\d/, /\\d/, /\\d/]}\n                    value = {valueTelephone}\n                />\n                <TextInput\n                    id={idEmail}\n                    type=\"email\"\n                    label={emailLabel + \":\"}\n                    placeholder={emailLabel}\n                    error={errorEmail}\n                    onChange={onChange}\n                    onBlur={onBlur}\n                />\n            </div>\n        </fieldset>\n    );\n};\n\nexport default DataComponent;\n\n","\nimport React from 'react';\nimport classnames from 'classnames';\nimport InputFeedback from './InputFeedback';\n\nconst ChoiseButtonGroup = ({ idBox, id, label, error, className, children, classDirectionInputgroup }) => {\n    const classes = classnames(\n        \"div-group\",\n        {\n            \"error\": !!error,\n        },\n        className\n    );\n    return (\n        <fieldset id={idBox} className={classes} >\n            <legend className=\"title-fieldset-element\" >{label}</legend>\n            <hr/>\n            <div id={id} className={classDirectionInputgroup}>\n                {children}\n            </div>\n            <InputFeedback error={error} />\n        </fieldset>\n    );\n};\n\nexport default ChoiseButtonGroup;","import React from \"react\";\nimport classnames from 'classnames';\nimport Label from './Label';\n\nconst ChoiseButton = ({ name, id, value, label, onChange, onBlur, className, hour, type, classNameInput }) => {\n    //Adicionar outra classe\n    const classes = classnames(\n        className\n    );\n    return (\n        <div className={classes}>\n            <input\n                name={name}\n                id={id}\n                type={type}\n                value={value} // could be something else for output?\n                onChange={onChange}\n                onBlur={onBlur}\n                className={classnames({ classNameInput })}\n            />\n            <Label htmlFor={id} >\n                {label} <br /> {hour}\n            </Label>\n        </div>\n    );\n};\n\nexport default ChoiseButton;","import React from 'react';\nimport ChoiseButtonGroup from '../primary_components/ChoiseButtonGroup'\nimport ChoiseButton from '../primary_components/ChoiseButton'\n\n\nconst TimeComponent = ({ value, error, onChange, onBlur }) => {\n\n    return (\n\n        <ChoiseButtonGroup\n            idBox=\"box-horario\"\n            id=\"horarios\"\n            label=\"HORÁRIO DA VISITA\"\n            value={value}\n            error={error}\n            className=\"elements-group\"\n            classDirectionInputgroup=\"input-group-row\">\n            <ChoiseButton\n                component={ChoiseButton}\n                name=\"horario\"\n                id=\"horarioManha\"\n                type=\"radio\"\n                label=\"Manhã:\"\n                hour=\"8:30h às 11:30h\"\n                onChange={onChange}\n                onBlur={onBlur}\n                className=\"horario\"\n                classNameInput=\"radio-button\"\n                value='manhã'\n            />\n            <ChoiseButton\n                component={ChoiseButton}\n                name=\"horario\"\n                id=\"horarioTarde\"\n                type=\"radio\"\n                label=\"Tarde:\"\n                hour=\"das 13:30h às 16:30h\"\n                onChange={onChange}\n                onBlur={onBlur}\n                className=\"horario\"\n                classNameInput=\"radio-button\"\n                value='tarde'\n\n            />\n            <ChoiseButton\n                component={ChoiseButton}\n                name=\"horario\"\n                id=\"horarioManhaTarde\"\n                type=\"radio\"\n                label=\"Manhã e Tarde:\"\n                hour=\"das 8:30h às 16:30h\"\n                onChange={onChange}\n                onBlur={onBlur}\n                className=\"horario\"\n                classNameInput=\"radio-button\"\n                value='manhã e tarde'\n\n            />\n        </ChoiseButtonGroup>\n    )\n\n}\n\nexport default TimeComponent;","import React from 'react';\nimport ChoiseButtonGroup from '../../primary_components/ChoiseButtonGroup';\nimport ChoiseButton from '../../primary_components/ChoiseButton';\n\n\nconst INSAComponent = ({ value, error, onChange, onBlur }) => {\n\n    return (\n        <ChoiseButtonGroup\n            id=\"sedeInsa\"\n            label=\"Sede INSA\"\n            value={value}\n            error={error}\n            classDirectionInputgroup=\"input-group-column\"\n        >\n            <h5>Exposição</h5>\n\n            <ChoiseButton\n                name=\"localINSA\"\n                id=\"SistemaCaptacaoAguaChuvas\"\n                value='Sistema de captação e armazenamento de água de chuvas'\n                type=\"checkbox\"\n                label='Sistema de captação e armazenamento de água de chuvas'\n                onChange={onChange}\n                onBlur={onBlur}\n                className=\"local\"\n                classNameInput=\"checkbox-button\"\n            />\n            <ChoiseButton\n                name=\"localINSA\"\n                id=\"sistemaReusoAgricolas\"\n                value=\"Sistema de reuso para fins agrícolas\"\n                type=\"checkbox\"\n                label=\"Sistema de reuso para fins agrícolas\"\n                onChange={onChange}\n                onBlur={onBlur}\n                className=\"local\"\n                classNameInput=\"checkbox-button\"\n            />\n            <ChoiseButton\n                name=\"localINSA\"\n                id=\"estrategiasContencaoSolosDesertificacao\"\n                value=\"Estrátegias de contenção de solos e combate a desertificação\"\n                type=\"checkbox\"\n                label=\"Estrátegias de contenção de solos e combate a desertificação\"\n                onChange={onChange}\n                onBlur={onBlur}\n                className=\"local\"\n                classNameInput=\"checkbox-button\"\n            />\n\n            <ChoiseButton\n                name=\"localINSA\"\n                id=\"colecaoCactos\"\n                value=\"Coleções de cactos\"\n                type=\"checkbox\"\n                label=\"Coleções de cactos\"\n                onChange={onChange}\n                onBlur={onBlur}\n                className=\"local\"\n                classNameInput=\"checkbox-button\"\n            />\n        </ChoiseButtonGroup>\n    )\n}\n\nexport default INSAComponent;","import React from 'react';\nimport ChoiseButtonGroup from '../../primary_components/ChoiseButtonGroup';\nimport ChoiseButton from '../../primary_components/ChoiseButton';\nimport classnames from \"classnames\";\n\nconst ExperimentalStationComponent = ({ value, error, onChange, onBlur }) => {\n    return (\n\n        <ChoiseButtonGroup\n            id=\"estacaoExperimental\"\n            label=\"Estação Experimental\"\n            value={value}\n            error={error}\n            classDirectionInputgroup=\"input-group-column\"\n        >\n            <div id='exposicao'>\n                <h5>Exposição</h5>\n                <ChoiseButton\n                    name=\"localEstacaoExperimental\"\n                    id=\"biodigestor\"\n                    value=\"Biodigestor\"\n                    type=\"checkbox\"\n                    label=\"Biodigestor\"\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    className=\"local\"\n                    classNameInput=\"checkbox-button\"\n                />\n\n                <ChoiseButton\n                    name=\"localEstacaoExperimental\"\n                    id=\"viveiroMudas\"\n                    value=\"Viveiro de mudas\"\n                    type=\"checkbox\"\n                    label=\"Viveiro de mudas\"\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    className=\"local\"\n                    classNameInput=\"checkbox-button\"\n                />\n\n                <ChoiseButton\n                    name=\"localEstacaoExperimental\"\n                    id=\"estacaoMetereologica\"\n                    value=\"Estação meteorológica\"\n                    type=\"checkbox\"\n                    label=\"Estação meteorológica\"\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    className=\"local\"\n                    classNameInput=\"checkbox-button\"\n                />\n\n                <ChoiseButton\n                    name=\"localEstacaoExperimental\"\n                    id=\"estacaoMetereologica\"\n                    value=\"Estação meteorológica\"\n                    type=\"checkbox\"\n                    label=\"Estação meteorológica\"\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    className=\"local\"\n                    classNameInput=\"checkbox-button\"\n                />\n\n                <ChoiseButton\n                    name=\"localEstacaoExperimental\"\n                    id=\"barreiroInteligenteBarragemMeiaLua\"\n                    value=\"Barreiro Inteligente e Barragem Meia Lua\"\n                    type=\"checkbox\"\n                    label=\"Barreiro Inteligente e Barragem Meia Lua\"\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    className=\"local\"\n                    classNameInput=\"checkbox-button\"\n                />\n\n                <ChoiseButton\n                    name=\"localEstacaoExperimental\"\n                    id=\"gadocurraleiro\"\n                    value=\"Gado Curraleiro Pé Duro\"\n                    type=\"checkbox\"\n                    label=\"Gado Curraleiro Pé Duro\"\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    className=\"local\"\n                    classNameInput=\"checkbox-button\"\n                />\n\n                <ChoiseButton\n                    name=\"localEstacaoExperimental\"\n                    id=\"forragemNativa\"\n                    value=\"Forragens nativas da caatinga\"\n                    type=\"checkbox\"\n                    label=\"Forragens nativas da caatinga\"\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    className=\"local\"\n                    classNameInput=\"checkbox-button\"\n                />\n\n                <ChoiseButton\n                    name=\"localEstacaoExperimental\"\n                    id=\"campoExperimentacaoPalma\"\n                    value=\"Campos de experimentação da palma forrageira resistente a cochonilha do carmim\"\n                    type=\"checkbox\"\n                    label=\"Campos de experimentação da palma forrageira resistente a cochonilha do carmim\"\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    className=\"local\"\n                    classNameInput=\"checkbox-button\"\n                />\n\n            </div>\n\n            <div id=\"laboratorios\">\n                <h5>Laboratórios</h5>\n\n\n                <ChoiseButton\n                    name=\"localEstacaoExperimental\"\n                    id=\"labAnaliseAlimentos\"\n                    value=\"Laboratório de Análise de Alimentos\"\n                    type=\"checkbox\"\n                    label=\"Laboratório de Análise de Alimentos\"\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    className=\"local\"\n                    classNameInput=\"checkbox-button\"\n                />\n\n                <ChoiseButton\n                    name=\"localEstacaoExperimental\"\n                    id=\"labMicrobiologiaAmbiental\"\n                    value=\"Laboratório de Microbiologia Ambiental\"\n                    type=\"checkbox\"\n                    label=\"Laboratório de Microbiologia Ambiental\"\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    className=\"local\"\n                    classNameInput=\"checkbox-button\"\n                />\n\n                <ChoiseButton\n                    name=\"localEstacaoExperimental\"\n                    id=\"labMicropropagacao\"\n                    value=\"Laboratório de Micropropagação\"\n                    type=\"checkbox\"\n                    label=\"Laboratório de Micropropagação\"\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    className=\"local\"\n                    classNameInput=\"checkbox-button\"\n                />\n\n                <ChoiseButton\n                    name=\"localEstacaoExperimental\"\n                    id=\"labSolos\"\n                    value=\"Laboratório de Solos\"\n                    type=\"checkbox\"\n                    label=\"Laboratório de Solos\"\n                    onChange={onChange}\n                    onBlur={onBlur}\n                    className=\"local\"\n                    classNameInput=\"checkbox-button\"\n                />\n\n            </div>\n        </ChoiseButtonGroup>\n    )\n}\n\nexport default ExperimentalStationComponent;","import React from \"react\";\nimport { useFormik } from \"formik\";\n\nimport * as Yup from \"yup\";\n\nimport DataComponent from \"./components/general_components/DataComponent\";\nimport TimeComponent from \"./components/general_components/TimeComponent\";\nimport INSAComponent from \"./components/general_components/local_components/INSAComponent\";\nimport ExperimentalStationComponent from \"./components/general_components/local_components/ExperimentalStationComponent\";\n\nimport TextInput from \"./components/primary_components/TextInput\";\nimport TextAreaInput from \"./components/primary_components/TextAreaInput\";\nimport TextMaskedInput from \"./components/primary_components/TextMaskedInput\";\n\n\nconst initialValues = {\n    nomeInstituicao: \"\",\n    telefoneInstituicao: \"\",\n    emailInstituicao: \"\",\n    nomeResponsavel: \"\",\n    telefoneResponsavel: \"\",\n    emailresponsavel: \"\",\n    nVisitantes: \"\",\n    dataVisita: \"\",\n    objetivoCaracteristicas: \"\",\n    horario: \"\"\n};\n\nconst validationSchema = Yup.object().shape({\n    nomeInstituicao: Yup.string()\n        .label('Nome instituição visitante')\n        .required('Por favor, digite o nome da Instituição'),\n    telefoneInstituicao: Yup.string()\n        .label('Telefone da instituição visitante')\n        .min(4, 'Please enter no more than 40 characters')\n        .required('Por favor, digite o número do telefone com DDD'),\n    emailInstituicao: Yup.string()\n        .label('Nome instituição visitante')\n        .email(\"Por favor, adicione um e-mail válido\"),\n    nomeResponsavel: Yup.string()\n        .label('Nome instituição visitante')\n        .min(4, 'Mínimo 4 caracteres')\n        .required('Por favor, digite o nome do Responsável'),\n    telefoneResponsavel: Yup.string()\n        .label('Telefone da instituição visitante')\n        .required('Por favor, digite o número do telefone com DDD'),\n    emailresponsavel: Yup.string()\n        .label('Nome instituição visitante')\n        .email(\"Por favor, adicione um e-mail válido\")\n        .required('Por favor, digite um endereço de e-mail'),\n    nVisitantes: Yup.number()\n        .label('Número de visitantes')\n        .required('Por favor, digite um número'),\n    dataVisita: Yup.date()\n        .label('Data da visita')\n        .required('Por favor, digite uma data'),\n    objetivoCaracteristicas: Yup.string()\n        .label('Objetivo e características da turma visitante')\n        .required('Por favor, digite o objetivo e características da turma'),\n    horario: Yup.string()\n        .label('Horário da visita')\n        .required('Por favor, escolha um horário para a visita')\n})\n\nconst onSubmit = values => { \n\n    alert(JSON.stringify(values, null, 2));\n};\n\nconst INSAForm = () => {\n    const formik = useFormik({\n        initialValues,\n        validationSchema,\n        onSubmit\n    });\n\n    return (\n        <div className=\"container\" >\n            <h1>Formulário de Agendamento de Visita</h1>\n            <hr />\n            <p>\n                As atividades de visitas ao INSA, ocorrem preferencialmente às terças feiras em função da dosponibilidade de técnicas e pesquisadores responsáveis por cada área e cada pesquisa. Sugerimos que casos isolados devam ser discutidos por telefone ou presencialmente. Preencha este formulário e nos ajude a facilitar seu processo de agendamento de visita ao INSA.\n            </p>\n            <h4>Observações:</h4>\n            <ul>\n                <li>Após o preenchimento dos dados deste formulário, você receberá confirmação e validação por e-mail referente as datas e demais pormenores, mediante análise interna.</li>\n                <li>Como sugestão para melhor aproveitamento em termos de logistica, separe um turno (manhã ou tarde) para casa local de experimento. Por exemplo: Sede do INSA (manhã); Estação Experimental (tarde).</li>\n                <li>Usar proteção solar (chapéu, protetor solar, roupas confortáveis), trazer garrafinhas com água.</li>\n            </ul>\n            <form onSubmit={formik.handleSubmit}>\n                {/*Dados instituição*/}\n                <DataComponent\n                    id=\"instituicao\"\n                    legend=\"INSTITUIÇÃO VISITANTE\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    idName=\"nomeInstituicao\"\n                    nameLabel=\"Nome da Instituição Visitante\"\n                    errorName={formik.touched.nomeInstituicao && formik.errors.nomeInstituicao}\n                    idTelphone=\"telefoneInstituicao\"\n                    telephoneLabel=\"Telefone da Instituição visitante\"\n                    errorTelphone={formik.touched.telefoneInstituicao && formik.errors.telefoneInstituicao}\n                    idEmail=\"emailInstituicao\"\n                    emailLabel=\"E-mail da Instituição visitante\"\n                    errorEmail={formik.touched.emailInstituicao && formik.errors.emailInstituicao}\n                    valueTelephone = {formik.values.telefoneInstituicao}\n                />\n                {/*Dados responsável pela visita*/}\n\n                <DataComponent\n                    id=\"responsavel\"\n                    legend=\"RESPONSÁVEL PELA VISITA\"\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                    idName=\"nomeResponsavel\"\n                    nameLabel=\"Nome do responsável pela visita\"\n                    errorName={formik.touched.nomeResponsavel && formik.errors.nomeResponsavel}\n                    idTelphone=\"telefoneResponsavel\"\n                    telephoneLabel=\"Telefone do Responsável pela visita\"\n                    errorTelphone={formik.touched.telefoneResponsavel && formik.errors.telefoneResponsavel}\n                    idEmail=\"emailresponsavel\"\n                    emailLabel=\"E-mail do responsável pela visita\"\n                    errorEmail={formik.touched.emailresponsavel && formik.errors.emailresponsavel}\n                />\n\n                {/* Dados gerais sobre a visita*/}\n                <div className=\"elements-group div-group\">\n                    <div className=\"input-group-row\">\n                        { /* Ajustar para receber apenas números positivos */}\n                        <TextInput\n                            id=\"nVisitantes\"\n                            type=\"number\"\n                            label=\"Número de visitantes:\"\n                            placeholder=\"Número de visitantes\"\n                            error={formik.touched.nVisitantes && formik.errors.nVisitantes}\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                        />\n                        <TextInput\n                            id=\"dataVisita\"\n                            type=\"text\"\n                            label=\"Data da visita:\"                   \n                            error={formik.touched.dataVisita && formik.errors.dataVisita}\n                            onChange={formik.handleChange}\n                            onBlur={formik.handleBlur}\n                        />\n                    </div>\n                    <TextInput\n                        id=\"objetivoCaracteristicas\"\n                        type=\"text\"\n                        label=\"Objetivo e características da turma:\"\n                        placeholder=\"Objetivo e características da turma\"\n                        error={formik.touched.objetivoCaracteristicas && formik.errors.objetivoCaracteristicas}\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                    />\n                </div>\n\n                {/* horário pretendido para a visita */}\n                <TimeComponent\n                    value={formik.values.horario}\n                    error={formik.touched.horario && formik.errors.horario}\n                    onChange={formik.handleChange}\n                    onBlur={formik.handleBlur}\n                />\n                {/* Locais pretendidos para a visita */}\n                <div className=\"div-group\">\n                    <h4 className=\"title-box-element\">\n                        OPÇÕES DE PROJETO E EXPERIMENTOS A SEREM VISITADOS\n                    </h4>\n\n                    {/*Locais de visitação na sede do INSA*/}\n                    <INSAComponent\n                        value={formik.values.localINSA}\n                        error={formik.touched.localINSA && formik.errors.localINSA}\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                    />\n\n                    {/*Locais de visitação na Estação Experimental*/}\n\n                    <ExperimentalStationComponent\n                        value={formik.values.localEstacao}\n                        error={formik.touched.localEstacao && formik.errors.localEstacao}\n                        onChange={formik.handleChange}\n                        onBlur={formik.handleBlur}\n                    />\n\n                </div>\n                <div className=\"formBtns\">\n                    <button type=\"reset\" className=\"outline\" onClick={formik.resetForm && formik.handleChange} disabled={!formik.dirty || formik.isSubmitting}>Limpar</button>\n                    <button type=\"submit\" >Enviar</button>\n                </div>\n            </form>\n\n\n        </div>\n    );\n};\n\nexport default INSAForm;\n","import ReactDOM from 'react-dom';\nimport React, { Component } from 'react';\nimport FormVisitenos from './FormVisitenos';\n\n\n\nimport \"./index.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <FormVisitenos />\n        </div>\n      </div>\n    )\n  }\n}\nconst rootElement = document.getElementById('root')\nReactDOM.render(<App />, rootElement)\n"],"sourceRoot":""}
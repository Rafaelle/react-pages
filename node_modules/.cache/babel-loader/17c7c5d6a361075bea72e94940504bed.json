{"ast":null,"code":"var _jsxFileName = \"/home/rafaelle.xavier/Documentos/visitenos-form-insa/form-app/src/FormVisitenos.js\";\nimport React from \"react\";\nimport { withFormik, ErrorMessage, useFormik } from \"formik\";\nimport * as Yup from 'yup';\nconst initialValues = {\n  nomeInstituicao: \"\"\n};\nconst validationSchema = Yup.object().shape({\n  nomeInstituicao: Yup.string().label('Nome').required('Please enter a registered name')\n});\n\nconst onSubmit = values => {\n  alert(JSON.stringify(values, null, 2));\n};\n\nconst INSAForm = () => {\n  const formik = useFormik({\n    initialValues,\n    validationSchema: validationSchema,\n    onSubmit\n  });\n  return React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    placeholder: \"Institui\\xE7\\xE3o visitante\",\n    id: \"nomeInstituicao\",\n    name: \"nomeInstituicao\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.nomeInstituicao,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), formik.touched.nomeInstituicao && formik.errors.nomeInstituicao ? React.createElement(\"div\", {\n    className: \"input-feedback\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, formik.errors.nomeInstituicao) : null), React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Enviar\"));\n};\n\nexport default INSAForm;","map":{"version":3,"sources":["/home/rafaelle.xavier/Documentos/visitenos-form-insa/form-app/src/FormVisitenos.js"],"names":["React","withFormik","ErrorMessage","useFormik","Yup","initialValues","nomeInstituicao","validationSchema","object","shape","string","label","required","onSubmit","values","alert","JSON","stringify","INSAForm","formik","handleSubmit","handleChange","handleBlur","touched","errors"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,SAAnC,QAAoD,QAApD;AAEA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AAIA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,eAAe,EAAE;AADG,CAAtB;AAMA,MAAMC,gBAAgB,GAAGH,GAAG,CAACI,MAAJ,GAAaC,KAAb,CAAmB;AAC1CH,EAAAA,eAAe,EAAEF,GAAG,CAACM,MAAJ,GACdC,KADc,CACR,MADQ,EAEdC,QAFc,CAEL,gCAFK;AADyB,CAAnB,CAAzB;;AASA,MAAMC,QAAQ,GAAGC,MAAM,IAAI;AACzBC,EAAAA,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;AAED,CAHD;;AAUA,MAAMI,QAAQ,GAAG,MAAM;AAErB,QAAMC,MAAM,GAAGhB,SAAS,CAAC;AACvBE,IAAAA,aADuB;AAEvBE,IAAAA,gBAAgB,EAAEA,gBAFK;AAGvBM,IAAAA;AAHuB,GAAD,CAAxB;AAUA,SACE;AAAM,IAAA,QAAQ,EAAEM,MAAM,CAACC,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,WAAW,EAAC,6BAAnB;AACC,IAAA,EAAE,EAAC,iBADJ;AAEC,IAAA,IAAI,EAAC,iBAFN;AAGC,IAAA,IAAI,EAAC,MAHN;AAIE,IAAA,QAAQ,EAAED,MAAM,CAACE,YAJnB;AAKE,IAAA,MAAM,EAAEF,MAAM,CAACG,UALjB;AAME,IAAA,KAAK,EAAEH,MAAM,CAACL,MAAP,CAAcR,eANvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASLa,MAAM,CAACI,OAAP,CAAejB,eAAf,IAAkCa,MAAM,CAACK,MAAP,CAAclB,eAAhD,GACS;AAAM,IAAA,SAAS,EAAC,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmCa,MAAM,CAACK,MAAP,CAAclB,eAAjD,CADT,GAEW,IAXN,CADF,EAeE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfF,CADF;AAqBD,CAjCD;;AAmCA,eAAeY,QAAf","sourcesContent":["import React from \"react\";\nimport { withFormik, ErrorMessage, useFormik } from \"formik\";\n\nimport * as Yup from 'yup';\n\n\n\nconst initialValues = {\n  nomeInstituicao: \"\",\n\n\n};\n\nconst validationSchema = Yup.object().shape({\n  nomeInstituicao: Yup.string()\n    .label('Nome')\n    .required('Please enter a registered name'),\n  \n})\n\n\n\nconst onSubmit = values => {\n  alert(JSON.stringify(values, null, 2));\n\n};\n\n\n\n\n\n\nconst INSAForm = () => {\n\n  const formik = useFormik({\n    initialValues,\n    validationSchema: validationSchema,\n    onSubmit\n\n\n\n  });\n\n\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <div>\n        <input placeholder=\"Instituição visitante\"\n         id=\"nomeInstituicao\"\n         name=\"nomeInstituicao\"\n         type=\"text\"\n          onChange={formik.handleChange}\n          onBlur={formik.handleBlur}\n          value={formik.values.nomeInstituicao} \n          />\n{formik.touched.nomeInstituicao && formik.errors.nomeInstituicao ? (\n          <div  className=\"input-feedback\" >{formik.errors.nomeInstituicao}</div>\n        ) : null}\n   \n      </div>\n      <button type=\"submit\">Enviar</button>\n\n\n    </form>\n  );\n};\n\nexport default INSAForm\n"]},"metadata":{},"sourceType":"module"}
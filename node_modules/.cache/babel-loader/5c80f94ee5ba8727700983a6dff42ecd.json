{"ast":null,"code":"var _jsxFileName = \"/home/rafaelle.xavier/Documentos/visitenos-form-insa/form-app/src/testeYup.js\";\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nconst initialValues = {\n  nomeInstituicao: \"\",\n  telefoneInstituicao: \"\",\n  emailInstituicao: \"\",\n  nomeResponsavel: \"\",\n  telefoneResponsavel: \"\",\n  emailResponsavel: \"\",\n  nVisitantes: \"\",\n  dataVisita: \"\",\n  objetivoCaract: \"\",\n  horario: \"\",\n  opcoes: \"\"\n};\nconst validationSchema = Yup.object().shape({\n  nomeInstituicao: Yup.string().label('Nome').email('Enter a valid Name').required('Please enter a registered name'),\n  emailInstituicao: Yup.string().label('Email').email('Enter a valid email').required('Please enter a registered email')\n});\n\nconst SignupForm = () => {\n  const formik = useFormik({\n    initialValues,\n    validationSchema: Yup.object({\n      firstName: Yup.string().max(15, 'Must be 15 characters or less').required('Required'),\n      lastName: Yup.string().max(20, 'Must be 20 characters or less').required('Required'),\n      email: Yup.string().email('Invalid email address').required('Required')\n    }),\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"First Name\"), React.createElement(\"input\", Object.assign({\n    name: \"firstName\"\n  }, formik.getFieldProps('firstName'), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  })), formik.touched.firstName && formik.errors.firstName ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, formik.errors.firstName) : null, React.createElement(\"label\", {\n    htmlFor: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Last Name\"), React.createElement(\"input\", Object.assign({\n    name: \"lastName\"\n  }, formik.getFieldProps('lastName'), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), formik.touched.lastName && formik.errors.lastName ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, formik.errors.lastName) : null, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Email Address\"), React.createElement(\"input\", Object.assign({\n    name: \"email\"\n  }, formik.getFieldProps('email'), {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), formik.touched.email && formik.errors.email ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, formik.errors.email) : null, React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nexport default SignupForm;","map":{"version":3,"sources":["/home/rafaelle.xavier/Documentos/visitenos-form-insa/form-app/src/testeYup.js"],"names":["React","useFormik","Yup","initialValues","nomeInstituicao","telefoneInstituicao","emailInstituicao","nomeResponsavel","telefoneResponsavel","emailResponsavel","nVisitantes","dataVisita","objetivoCaract","horario","opcoes","validationSchema","object","shape","string","label","email","required","SignupForm","formik","firstName","max","lastName","onSubmit","values","alert","JSON","stringify","handleSubmit","getFieldProps","touched","errors"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\n\n\nconst initialValues = {\n    nomeInstituicao: \"\",\n    telefoneInstituicao: \"\",\n    emailInstituicao: \"\",\n    nomeResponsavel: \"\",\n    telefoneResponsavel: \"\",\n    emailResponsavel: \"\",\n    nVisitantes: \"\",\n    dataVisita: \"\",\n    objetivoCaract: \"\",\n    horario: \"\",\n    opcoes: \"\"\n  \n  };\n\n  const validationSchema = Yup.object().shape({\n    nomeInstituicao: Yup.string()\n      .label('Nome')\n      .email('Enter a valid Name')\n      .required('Please enter a registered name'),\n    emailInstituicao: Yup.string()\n      .label('Email')\n      .email('Enter a valid email')\n      .required('Please enter a registered email'),\n  \n  })\n\nconst SignupForm = () => {\n  const formik = useFormik({\n    initialValues,\n    validationSchema: Yup.object({\n      firstName: Yup.string()\n        .max(15, 'Must be 15 characters or less')\n        .required('Required'),\n      lastName: Yup.string()\n        .max(20, 'Must be 20 characters or less')\n        .required('Required'),\n      email: Yup.string()\n        .email('Invalid email address')\n        .required('Required'),\n    }),\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <label htmlFor=\"firstName\">First Name</label>\n      <input name=\"firstName\" {...formik.getFieldProps('firstName')} />\n      {formik.touched.firstName && formik.errors.firstName ? (\n        <div>{formik.errors.firstName}</div>\n      ) : null}\n      <label htmlFor=\"lastName\">Last Name</label>\n      <input name=\"lastName\" {...formik.getFieldProps('lastName')} />\n      {formik.touched.lastName && formik.errors.lastName ? (\n        <div>{formik.errors.lastName}</div>\n      ) : null}\n      <label htmlFor=\"email\">Email Address</label>\n      <input name=\"email\" {...formik.getFieldProps('email')} />\n      {formik.touched.email && formik.errors.email ? (\n        <div>{formik.errors.email}</div>\n      ) : null}\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\nexport default SignupForm\n"]},"metadata":{},"sourceType":"module"}
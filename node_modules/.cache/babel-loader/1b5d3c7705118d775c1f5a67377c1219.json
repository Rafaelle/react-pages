{"ast":null,"code":"var _jsxFileName = \"/home/rafaelle.xavier/Documentos/visitenos-form-insa/form-app/src/index.js\";\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { render } from \"react-dom\";\nimport { Formik } from \"formik\";\nimport \"./index.css\";\n\nconst validate = values => {\n  const errors = {};\n\n  if (!values.intituicaoVisitante) {\n    errors.intituicaoVisitante = 'Required';\n  }\n\n  if (!values.lastName) {\n    errors.lastName = 'Required';\n  } else if (values.lastName.length > 20) {\n    errors.lastName = 'Must be 20 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  return errors;\n};\n\nconst INSAForm = () => {\n  // Notice that we have to initialize ALL of fields with values. These\n  // could come from props, but since we don't want to prefill this form,\n  // we just use an empty string. If you don't do this, React will yell\n  // at you.\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      email: '',\n      lastName: ''\n    },\n    validate,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    htmlFor: \"intituicaoVisitante\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Nome do respons\\xE1vel\"), React.createElement(\"input\", {\n    id: \"intituicaoVisitante\",\n    name: \"intituicaoVisitante\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.firstName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), formik.touched.firstName && formik.errors.firstName ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, formik.errors.firstName) : null), \"/*\", React.createElement(\"label\", {\n    htmlFor: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, \"Nome do respons\\xE1vel\"), React.createElement(\"input\", {\n    id: \"firstName\",\n    name: \"firstName\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.firstName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), formik.touched.firstName && formik.errors.firstName ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, formik.errors.firstName) : null, React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"Email do respons\\xE1vel pela visita\"), React.createElement(\"input\", {\n    id: \"email\",\n    name: \"email\",\n    type: \"email\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.email,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), formik.touched.email && formik.errors.email ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, formik.errors.email) : null, React.createElement(\"label\", {\n    htmlFor: \"lastName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Institui\\xE7\\xE3o que far\\xE1 a visita\"), React.createElement(\"input\", {\n    id: \"lastName\",\n    name: \"lastName\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    onBlur: formik.handleBlur,\n    value: formik.values.lastName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }), formik.touched.lastName && formik.errors.lastName ? React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, formik.errors.lastName) : null, \"*/\", React.createElement(\"button\", {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Submit\"));\n};\n\nrender(React.createElement(INSAForm, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109\n  },\n  __self: this\n}), document.getElementById(\"root\"));","map":{"version":3,"sources":["/home/rafaelle.xavier/Documentos/visitenos-form-insa/form-app/src/index.js"],"names":["React","useFormik","render","Formik","validate","values","errors","intituicaoVisitante","lastName","length","email","test","INSAForm","formik","initialValues","firstName","onSubmit","alert","JSON","stringify","handleSubmit","handleChange","handleBlur","touched","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useFormik } from 'formik';\n\nimport { render } from \"react-dom\";\nimport { Formik } from \"formik\";\n\nimport \"./index.css\";\n\n\nconst validate = values => {\n  const errors = {};\n  if (!values.intituicaoVisitante) {\n    errors.intituicaoVisitante = 'Required';\n  }\n\n  if (!values.lastName) {\n    errors.lastName = 'Required';\n  } else if (values.lastName.length > 20) {\n    errors.lastName = 'Must be 20 characters or less';\n  }\n\n  if (!values.email) {\n    errors.email = 'Required';\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n    errors.email = 'Invalid email address';\n  }\n\n  return errors;\n};\n\nconst INSAForm = () => {\n  // Notice that we have to initialize ALL of fields with values. These\n  // could come from props, but since we don't want to prefill this form,\n  // we just use an empty string. If you don't do this, React will yell\n  // at you.\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      email: '',\n      lastName: '',\n    },\n    validate,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    },\n  });\n  return (\n    <form onSubmit={formik.handleSubmit}>\n    <div>\n    <label htmlFor=\"intituicaoVisitante\">Nome do respons√°vel</label>\n    <input\n      id=\"intituicaoVisitante\"\n      name=\"intituicaoVisitante\"\n      type=\"text\"\n      onChange={formik.handleChange}\n      onBlur={formik.handleBlur}\n      value={formik.values.firstName}\n    />\n    {formik.touched.firstName && formik.errors.firstName ? (\n      <div>{formik.errors.firstName}</div>\n    ) : null}\n\n    </div>\n\n    /*\n      <label htmlFor=\"firstName\">Nome do respons√°vel</label>\n      <input\n        id=\"firstName\"\n        name=\"firstName\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.firstName}\n      />\n      {formik.touched.firstName && formik.errors.firstName ? (\n        <div>{formik.errors.firstName}</div>\n      ) : null}\n      <label htmlFor=\"email\">Email do respons√°vel pela visita</label>\n      <input\n        id=\"email\"\n        name=\"email\"\n        type=\"email\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.email}\n      />\n      {formik.touched.email && formik.errors.email ? (\n        <div>{formik.errors.email}</div>\n      ) : null}\n      <label htmlFor=\"lastName\">Institui√ß√£o que far√° a visita</label>\n      <input\n        id=\"lastName\"\n        name=\"lastName\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        onBlur={formik.handleBlur}\n        value={formik.values.lastName}\n      />\n      {formik.touched.lastName && formik.errors.lastName ? (\n        <div>{formik.errors.lastName}</div>\n      ) : null}*/\n\n      <button type=\"submit\">Submit</button>\n    </form>\n  );\n};\n\n\nrender(<INSAForm />, document.getElementById(\"root\"));\n"]},"metadata":{},"sourceType":"module"}